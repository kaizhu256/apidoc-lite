<svg height="17998" width="720" xmlns="http://www.w3.org/2000/svg">
<rect height="17998" fill="#555" width="720"></rect>
<text fill="#7f7" font-family="Courier New" font-size="12" xml:space="preserve">
<tspan x="10" y="26"></tspan>

<tspan x="10" y="42">\x1b[35m[MODE_BUILD=npmTestPublished]\x1b[0m - 2020-06-08T09:52:56.694Z - npm-testing /tmp/npmTe\</tspan>
<tspan x="10" y="58">stPublished/node_modules/apidoc-lite</tspan>

<tspan x="10" y="74"></tspan>

<tspan x="10" y="90"></tspan>

<tspan x="10" y="106">istanbul - covering $ /home/travis/.nvm/versions/node/v14.4.0/bin/node /tmp/npmTestPublished/nod\</tspan>
<tspan x="10" y="122">e_modules/apidoc-lite/test.js</tspan>

<tspan x="10" y="138">&gt; jslint - 3ms - /tmp/npmTestPublished/node_modules/apidoc-lite/README.md</tspan>

<tspan x="10" y="154">jslint - 12ms - /tmp/npmTestPublished/node_modules/apidoc-lite/npm_scripts.sh</tspan>

<tspan x="10" y="170">--- /tmp/npmTestPublished/node_modules/apidoc-lite/package.json.autofix.old	2020-06-08 09:52:57.\</tspan>
<tspan x="10" y="186">134213964 +0000</tspan>

<tspan x="10" y="202">+++ /tmp/npmTestPublished/node_modules/apidoc-lite/package.json	2020-06-08 09:52:57.134213964 +0\</tspan>
<tspan x="10" y="218">000</tspan>

<tspan x="10" y="234">@@ -1,78 +1,78 @@</tspan>

<tspan x="10" y="250"> {</tspan>

<tspan x="10" y="266">-  "_from": "apidoc-lite",</tspan>

<tspan x="10" y="282">-  "_id": "apidoc-lite@2020.3.16",</tspan>

<tspan x="10" y="298">-  "_inBundle": false,</tspan>

<tspan x="10" y="314">-  "_integrity": "sha512-U/fOog1v3VKZLY8aATBVSDqpctfc8aBrzbCXG37bTQ5hBnXxd/5LiOEXlK/A+2SiAC3OWH4\</tspan>
<tspan x="10" y="330">oeKcSvpnfuPrgJA==",</tspan>

<tspan x="10" y="346">-  "_location": "/apidoc-lite",</tspan>

<tspan x="10" y="362">-  "_phantomChildren": {},</tspan>

<tspan x="10" y="378">-  "_requested": {</tspan>

<tspan x="10" y="394">-    "type": "tag",</tspan>

<tspan x="10" y="410">-    "registry": true,</tspan>

<tspan x="10" y="426">-    "raw": "apidoc-lite",</tspan>

<tspan x="10" y="442">+    "_from": "apidoc-lite",</tspan>

<tspan x="10" y="458">+    "_id": "apidoc-lite@2020.3.16",</tspan>

<tspan x="10" y="474">+    "_inBundle": false,</tspan>

<tspan x="10" y="490">+    "_integrity": "sha512-U/fOog1v3VKZLY8aATBVSDqpctfc8aBrzbCXG37bTQ5hBnXxd/5LiOEXlK/A+2SiAC3OW\</tspan>
<tspan x="10" y="506">H4oeKcSvpnfuPrgJA==",</tspan>

<tspan x="10" y="522">+    "_location": "/apidoc-lite",</tspan>

<tspan x="10" y="538">+    "_phantomChildren": {},</tspan>

<tspan x="10" y="554">+    "_requested": {</tspan>

<tspan x="10" y="570">+        "escapedName": "apidoc-lite",</tspan>

<tspan x="10" y="586">+        "fetchSpec": "latest",</tspan>

<tspan x="10" y="602">+        "name": "apidoc-lite",</tspan>

<tspan x="10" y="618">+        "raw": "apidoc-lite",</tspan>

<tspan x="10" y="634">+        "rawSpec": "",</tspan>

<tspan x="10" y="650">+        "registry": true,</tspan>

<tspan x="10" y="666">+        "saveSpec": null,</tspan>

<tspan x="10" y="682">+        "type": "tag"</tspan>

<tspan x="10" y="698">+    },</tspan>

<tspan x="10" y="714">+    "_requiredBy_": [</tspan>

<tspan x="10" y="730">+        "#USER",</tspan>

<tspan x="10" y="746">+        "/"</tspan>

<tspan x="10" y="762">+    ],</tspan>

<tspan x="10" y="778">+    "_resolved": "https://registry.npmjs.org/apidoc-lite/-/apidoc-lite-2020.3.16.tgz",</tspan>

<tspan x="10" y="794">+    "_shasum": "328d57fbc895a2a8edd6cb50cfa8efa2a1824a9a",</tspan>

<tspan x="10" y="810">+    "_spec": "apidoc-lite",</tspan>

<tspan x="10" y="826">+    "_where": "/tmp/npmTestPublished",</tspan>

<tspan x="10" y="842">+    "author": {</tspan>

<tspan x="10" y="858">+        "email": "kaizhu256@gmail.com",</tspan>

<tspan x="10" y="874">+        "name": "kai zhu"</tspan>

<tspan x="10" y="890">+    },</tspan>

<tspan x="10" y="906">+    "bin": {</tspan>

<tspan x="10" y="922">+        "apidoc-lite": "lib.apidoc.js"</tspan>

<tspan x="10" y="938">+    },</tspan>

<tspan x="10" y="954">+    "bugs": {</tspan>

<tspan x="10" y="970">+        "url": "https://github.com/kaizhu256/node-apidoc-lite/issues"</tspan>

<tspan x="10" y="986">+    },</tspan>

<tspan x="10" y="1002">+    "bundleDependencies": false,</tspan>

<tspan x="10" y="1018">+    "deprecated": false,</tspan>

<tspan x="10" y="1034">+    "description": "this zero-dependency package will auto-generate documentation for your npm-\</tspan>
<tspan x="10" y="1050">package with zero-config",</tspan>

<tspan x="10" y="1066">+    "devDependencies": {</tspan>

<tspan x="10" y="1082">+        "electron-lite": "github:kaizhu256/node-electron-lite#alpha",</tspan>

<tspan x="10" y="1098">+        "utility2": "github:kaizhu256/node-utility2#alpha"</tspan>

<tspan x="10" y="1114">+    },</tspan>

<tspan x="10" y="1130">+    "engines": {</tspan>

<tspan x="10" y="1146">+        "node": "&gt;=12.0"</tspan>

<tspan x="10" y="1162">+    },</tspan>

<tspan x="10" y="1178">+    "fileCount": 8,</tspan>

<tspan x="10" y="1194">+    "homepage": "https://github.com/kaizhu256/node-apidoc-lite",</tspan>

<tspan x="10" y="1210">+    "keywords": [</tspan>

<tspan x="10" y="1226">+        "apidoc",</tspan>

<tspan x="10" y="1242">+        "documentation-generator",</tspan>

<tspan x="10" y="1258">+        "doxygen"</tspan>

<tspan x="10" y="1274">+    ],</tspan>

<tspan x="10" y="1290">+    "license": "MIT",</tspan>

<tspan x="10" y="1306">+    "main": "lib.apidoc.js",</tspan>

<tspan x="10" y="1322">     "name": "apidoc-lite",</tspan>

<tspan x="10" y="1338">-    "escapedName": "apidoc-lite",</tspan>

<tspan x="10" y="1354">-    "rawSpec": "",</tspan>

<tspan x="10" y="1370">-    "saveSpec": null,</tspan>

<tspan x="10" y="1386">-    "fetchSpec": "latest"</tspan>

<tspan x="10" y="1402">-  },</tspan>

<tspan x="10" y="1418">-  "_requiredBy_": [</tspan>

<tspan x="10" y="1434">-    "#USER",</tspan>

<tspan x="10" y="1450">-    "/"</tspan>

<tspan x="10" y="1466">-  ],</tspan>

<tspan x="10" y="1482">-  "_resolved": "https://registry.npmjs.org/apidoc-lite/-/apidoc-lite-2020.3.16.tgz",</tspan>

<tspan x="10" y="1498">-  "_shasum": "328d57fbc895a2a8edd6cb50cfa8efa2a1824a9a",</tspan>

<tspan x="10" y="1514">-  "_spec": "apidoc-lite",</tspan>

<tspan x="10" y="1530">-  "_where": "/tmp/npmTestPublished",</tspan>

<tspan x="10" y="1546">-  "author": {</tspan>

<tspan x="10" y="1562">-    "name": "kai zhu",</tspan>

<tspan x="10" y="1578">-    "email": "kaizhu256@gmail.com"</tspan>

<tspan x="10" y="1594">-  },</tspan>

<tspan x="10" y="1610">-  "bin": {</tspan>

<tspan x="10" y="1626">-    "apidoc-lite": "lib.apidoc.js"</tspan>

<tspan x="10" y="1642">-  },</tspan>

<tspan x="10" y="1658">-  "bugs": {</tspan>

<tspan x="10" y="1674">-    "url": "https://github.com/kaizhu256/node-apidoc-lite/issues"</tspan>

<tspan x="10" y="1690">-  },</tspan>

<tspan x="10" y="1706">-  "bundleDependencies": false,</tspan>

<tspan x="10" y="1722">-  "deprecated": false,</tspan>

<tspan x="10" y="1738">-  "description": "this zero-dependency package will auto-generate documentation for your npm-pa\</tspan>
<tspan x="10" y="1754">ckage with zero-config",</tspan>

<tspan x="10" y="1770">-  "devDependencies": {</tspan>

<tspan x="10" y="1786">-    "electron-lite": "github:kaizhu256/node-electron-lite#alpha",</tspan>

<tspan x="10" y="1802">-    "utility2": "github:kaizhu256/node-utility2#alpha"</tspan>

<tspan x="10" y="1818">-  },</tspan>

<tspan x="10" y="1834">-  "engines": {</tspan>

<tspan x="10" y="1850">-    "node": "&gt;=12.0"</tspan>

<tspan x="10" y="1866">-  },</tspan>

<tspan x="10" y="1882">-  "fileCount": 8,</tspan>

<tspan x="10" y="1898">-  "homepage": "https://github.com/kaizhu256/node-apidoc-lite",</tspan>

<tspan x="10" y="1914">-  "keywords": [</tspan>

<tspan x="10" y="1930">-    "apidoc",</tspan>

<tspan x="10" y="1946">-    "documentation-generator",</tspan>

<tspan x="10" y="1962">-    "doxygen"</tspan>

<tspan x="10" y="1978">-  ],</tspan>

<tspan x="10" y="1994">-  "license": "MIT",</tspan>

<tspan x="10" y="2010">-  "main": "lib.apidoc.js",</tspan>

<tspan x="10" y="2026">-  "name": "apidoc-lite",</tspan>

<tspan x="10" y="2042">-  "nameAliasPublish": "npmdoc",</tspan>

<tspan x="10" y="2058">-  "nameLib": "apidoc",</tspan>

<tspan x="10" y="2074">-  "nameOriginal": "apidoc-lite",</tspan>

<tspan x="10" y="2090">-  "os": [</tspan>

<tspan x="10" y="2106">-    "darwin",</tspan>

<tspan x="10" y="2122">-    "linux"</tspan>

<tspan x="10" y="2138">-  ],</tspan>

<tspan x="10" y="2154">-  "repository": {</tspan>

<tspan x="10" y="2170">-    "type": "git",</tspan>

<tspan x="10" y="2186">-    "url": "git+https://github.com/kaizhu256/node-apidoc-lite.git"</tspan>

<tspan x="10" y="2202">-  },</tspan>

<tspan x="10" y="2218">-  "scripts": {</tspan>

<tspan x="10" y="2234">-    "build-ci": "./npm_scripts.sh",</tspan>

<tspan x="10" y="2250">-    "env": "env",</tspan>

<tspan x="10" y="2266">-    "eval": "./npm_scripts.sh",</tspan>

<tspan x="10" y="2282">-    "heroku-postbuild": "./npm_scripts.sh",</tspan>

<tspan x="10" y="2298">-    "postinstall": "./npm_scripts.sh",</tspan>

<tspan x="10" y="2314">-    "start": "./npm_scripts.sh",</tspan>

<tspan x="10" y="2330">-    "test": "./npm_scripts.sh",</tspan>

<tspan x="10" y="2346">-    "utility2": "./npm_scripts.sh"</tspan>

<tspan x="10" y="2362">-  },</tspan>

<tspan x="10" y="2378">-  "version": "2020.3.16"</tspan>

<tspan x="10" y="2394">+    "nameAliasPublish": "npmdoc",</tspan>

<tspan x="10" y="2410">+    "nameLib": "apidoc",</tspan>

<tspan x="10" y="2426">+    "nameOriginal": "apidoc-lite",</tspan>

<tspan x="10" y="2442">+    "os": [</tspan>

<tspan x="10" y="2458">+        "darwin",</tspan>

<tspan x="10" y="2474">+        "linux"</tspan>

<tspan x="10" y="2490">+    ],</tspan>

<tspan x="10" y="2506">+    "repository": {</tspan>

<tspan x="10" y="2522">+        "type": "git",</tspan>

<tspan x="10" y="2538">+        "url": "git+https://github.com/kaizhu256/node-apidoc-lite.git"</tspan>

<tspan x="10" y="2554">+    },</tspan>

<tspan x="10" y="2570">+    "scripts": {</tspan>

<tspan x="10" y="2586">+        "build-ci": "./npm_scripts.sh",</tspan>

<tspan x="10" y="2602">+        "env": "env",</tspan>

<tspan x="10" y="2618">+        "eval": "./npm_scripts.sh",</tspan>

<tspan x="10" y="2634">+        "heroku-postbuild": "./npm_scripts.sh",</tspan>

<tspan x="10" y="2650">+        "postinstall": "./npm_scripts.sh",</tspan>

<tspan x="10" y="2666">+        "start": "./npm_scripts.sh",</tspan>

<tspan x="10" y="2682">+        "test": "./npm_scripts.sh",</tspan>

<tspan x="10" y="2698">+        "utility2": "./npm_scripts.sh"</tspan>

<tspan x="10" y="2714">+    },</tspan>

<tspan x="10" y="2730">+    "version": "2020.3.16"</tspan>

<tspan x="10" y="2746"> }</tspan>

<tspan x="10" y="2762">jslint-autofix - modified and saved file /tmp/npmTestPublished/node_modules/apidoc-lite/package.\</tspan>
<tspan x="10" y="2778">json</tspan>

<tspan x="10" y="2794">jslint - 67ms - /tmp/npmTestPublished/node_modules/apidoc-lite/package.json</tspan>

<tspan x="10" y="2810">--- /tmp/npmTestPublished/node_modules/apidoc-lite/test.js.autofix.old	2020-06-08 09:52:57.33821\</tspan>
<tspan x="10" y="2826">3940 +0000</tspan>

<tspan x="10" y="2842">+++ /tmp/npmTestPublished/node_modules/apidoc-lite/test.js	2020-06-08 09:52:57.338213940 +0000</tspan>

<tspan x="10" y="2858">@@ -1,35 +1,28 @@</tspan>

<tspan x="10" y="2874"> /* istanbul instrument in package apidoc */</tspan>

<tspan x="10" y="2890"> // assets.utility2.header.js - start</tspan>

<tspan x="10" y="2906">-/* istanbul ignore next */</tspan>

<tspan x="10" y="2922"> /* jslint utility2:true */</tspan>

<tspan x="10" y="2938">+/* istanbul ignore next */</tspan>

<tspan x="10" y="2954">+// run shared js-env code - init-local</tspan>

<tspan x="10" y="2970"> (function (globalThis) {</tspan>

<tspan x="10" y="2986">     "use strict";</tspan>

<tspan x="10" y="3002">     let consoleError;</tspan>

<tspan x="10" y="3018">-    let debugName;</tspan>

<tspan x="10" y="3034">     let local;</tspan>

<tspan x="10" y="3050">-    debugName = "debug" + String("Inline");</tspan>

<tspan x="10" y="3066">     // init globalThis</tspan>

<tspan x="10" y="3082">     globalThis.globalThis = globalThis.globalThis || globalThis;</tspan>

<tspan x="10" y="3098">-    // init debug_inline</tspan>

<tspan x="10" y="3114">-    if (!globalThis[debugName]) {</tspan>

<tspan x="10" y="3130">+    // init debugInline</tspan>

<tspan x="10" y="3146">+    if (!globalThis.debugInline) {</tspan>

<tspan x="10" y="3162">         consoleError = console.error;</tspan>

<tspan x="10" y="3178">-        globalThis[debugName] = function (...argList) {</tspan>

<tspan x="10" y="3194">+        globalThis.debugInline = function (...argList) {</tspan>

<tspan x="10" y="3210">         /*</tspan>

<tspan x="10" y="3226">          * this function will both print &lt;argList&gt; to stderr</tspan>

<tspan x="10" y="3242">          * and return &lt;argList&gt;[0]</tspan>

<tspan x="10" y="3258">          */</tspan>

<tspan x="10" y="3274">-            consoleError("\n\n" + debugName);</tspan>

<tspan x="10" y="3290">+            consoleError("\n\ndebugInline");</tspan>

<tspan x="10" y="3306">             consoleError(...argList);</tspan>

<tspan x="10" y="3322">             consoleError("\n");</tspan>

<tspan x="10" y="3338">             return argList[0];</tspan>

<tspan x="10" y="3354">         };</tspan>

<tspan x="10" y="3370">     }</tspan>

<tspan x="10" y="3386">-    String.prototype.trimEnd = (</tspan>

<tspan x="10" y="3402">-        String.prototype.trimEnd || String.prototype.trimRight</tspan>

<tspan x="10" y="3418">-    );</tspan>

<tspan x="10" y="3434">-    String.prototype.trimStart = (</tspan>

<tspan x="10" y="3450">-        String.prototype.trimStart || String.prototype.trimLeft</tspan>

<tspan x="10" y="3466">-    );</tspan>

<tspan x="10" y="3482">     // init local</tspan>

<tspan x="10" y="3498">     local = {};</tspan>

<tspan x="10" y="3514">     local.local = local;</tspan>

<tspan x="10" y="3530">@@ -45,9 +38,39 @@</tspan>

<tspan x="10" y="3546">         local.isBrowser &amp;&amp; typeof globalThis.importScripts === "function"</tspan>

<tspan x="10" y="3562">     );</tspan>

<tspan x="10" y="3578">     // init function</tspan>

<tspan x="10" y="3594">+    local.assertJsonEqual = function (aa, bb) {</tspan>

<tspan x="10" y="3610">+    /*</tspan>

<tspan x="10" y="3626">+     * this function will assert JSON.stringify(&lt;aa&gt;) === JSON.stringify(&lt;bb&gt;)</tspan>

<tspan x="10" y="3642">+     */</tspan>

<tspan x="10" y="3658">+        let objectDeepCopyWithKeysSorted;</tspan>

<tspan x="10" y="3674">+        objectDeepCopyWithKeysSorted = function (obj) {</tspan>

<tspan x="10" y="3690">+        /*</tspan>

<tspan x="10" y="3706">+         * this function will recursively deep-copy &lt;obj&gt; with keys sorted</tspan>

<tspan x="10" y="3722">+         */</tspan>

<tspan x="10" y="3738">+            let sorted;</tspan>

<tspan x="10" y="3754">+            if (typeof obj !== "object" || !obj) {</tspan>

<tspan x="10" y="3770">+                return obj;</tspan>

<tspan x="10" y="3786">+            }</tspan>

<tspan x="10" y="3802">+            // recursively deep-copy list with child-keys sorted</tspan>

<tspan x="10" y="3818">+            if (Array.isArray(obj)) {</tspan>

<tspan x="10" y="3834">+                return obj.map(objectDeepCopyWithKeysSorted);</tspan>

<tspan x="10" y="3850">+            }</tspan>

<tspan x="10" y="3866">+            // recursively deep-copy obj with keys sorted</tspan>

<tspan x="10" y="3882">+            sorted = {};</tspan>

<tspan x="10" y="3898">+            Object.keys(obj).sort().forEach(function (key) {</tspan>

<tspan x="10" y="3914">+                sorted[key] = objectDeepCopyWithKeysSorted(obj[key]);</tspan>

<tspan x="10" y="3930">+            });</tspan>

<tspan x="10" y="3946">+            return sorted;</tspan>

<tspan x="10" y="3962">+        };</tspan>

<tspan x="10" y="3978">+        aa = JSON.stringify(objectDeepCopyWithKeysSorted(aa));</tspan>

<tspan x="10" y="3994">+        bb = JSON.stringify(objectDeepCopyWithKeysSorted(bb));</tspan>

<tspan x="10" y="4010">+        if (aa !== bb) {</tspan>

<tspan x="10" y="4026">+            throw new Error(JSON.stringify(aa) + " !== " + JSON.stringify(bb));</tspan>

<tspan x="10" y="4042">+        }</tspan>

<tspan x="10" y="4058">+    };</tspan>

<tspan x="10" y="4074">     local.assertOrThrow = function (passed, msg) {</tspan>

<tspan x="10" y="4090">     /*</tspan>

<tspan x="10" y="4106">-     * this function will throw err.&lt;msg&gt; if &lt;passed&gt; is falsy</tspan>

<tspan x="10" y="4122">+     * this function will throw &lt;msg&gt; if &lt;passed&gt; is falsy</tspan>

<tspan x="10" y="4138">      */</tspan>

<tspan x="10" y="4154">         if (passed) {</tspan>

<tspan x="10" y="4170">             return;</tspan>

<tspan x="10" y="4186">@@ -62,9 +85,9 @@</tspan>

<tspan x="10" y="4202">             ? msg</tspan>

<tspan x="10" y="4218">             : new Error(</tspan>

<tspan x="10" y="4234">                 typeof msg === "string"</tspan>

<tspan x="10" y="4250">-                // if msg is a string, then leave as is</tspan>

<tspan x="10" y="4266">+                // if msg is string, then leave as is</tspan>

<tspan x="10" y="4282">                 ? msg</tspan>

<tspan x="10" y="4298">-                // else JSON.stringify msg</tspan>

<tspan x="10" y="4314">+                // else JSON.stringify(msg)</tspan>

<tspan x="10" y="4330">                 : JSON.stringify(msg, undefined, 4)</tspan>

<tspan x="10" y="4346">             )</tspan>

<tspan x="10" y="4362">         );</tspan>

<tspan x="10" y="4378">@@ -78,71 +101,13 @@</tspan>

<tspan x="10" y="4394">         ii = 0;</tspan>

<tspan x="10" y="4410">         while (ii &lt; argList.length) {</tspan>

<tspan x="10" y="4426">             arg = argList[ii];</tspan>

<tspan x="10" y="4442">-            if (arg !== null &amp;&amp; arg !== undefined &amp;&amp; arg !== "") {</tspan>

<tspan x="10" y="4458">-                break;</tspan>

<tspan x="10" y="4474">+            if (arg !== undefined &amp;&amp; arg !== null &amp;&amp; arg !== "") {</tspan>

<tspan x="10" y="4490">+                return arg;</tspan>

<tspan x="10" y="4506">             }</tspan>

<tspan x="10" y="4522">             ii += 1;</tspan>

<tspan x="10" y="4538">         }</tspan>

<tspan x="10" y="4554">         return arg;</tspan>

<tspan x="10" y="4570">     };</tspan>

<tspan x="10" y="4586">-    local.fsRmrfSync = function (dir) {</tspan>

<tspan x="10" y="4602">-    /*</tspan>

<tspan x="10" y="4618">-     * this function will sync "rm -rf" &lt;dir&gt;</tspan>

<tspan x="10" y="4634">-     */</tspan>

<tspan x="10" y="4650">-        let child_process;</tspan>

<tspan x="10" y="4666">-        // do nothing if module does not exist</tspan>

<tspan x="10" y="4682">-        try {</tspan>

<tspan x="10" y="4698">-            child_process = require("child_process");</tspan>

<tspan x="10" y="4714">-        } catch (ignore) {</tspan>

<tspan x="10" y="4730">-            return;</tspan>

<tspan x="10" y="4746">-        }</tspan>

<tspan x="10" y="4762">-        child_process.spawnSync("rm", [</tspan>

<tspan x="10" y="4778">-            "-rf", dir</tspan>

<tspan x="10" y="4794">-        ], {</tspan>

<tspan x="10" y="4810">-            stdio: [</tspan>

<tspan x="10" y="4826">-                "ignore", 1, 2</tspan>

<tspan x="10" y="4842">-            ]</tspan>

<tspan x="10" y="4858">-        });</tspan>

<tspan x="10" y="4874">-    };</tspan>

<tspan x="10" y="4890">-    local.fsWriteFileWithMkdirpSync = function (file, data) {</tspan>

<tspan x="10" y="4906">-    /*</tspan>

<tspan x="10" y="4922">-     * this function will sync write &lt;data&gt; to &lt;file&gt; with "mkdir -p"</tspan>

<tspan x="10" y="4938">-     */</tspan>

<tspan x="10" y="4954">-        let fs;</tspan>

<tspan x="10" y="4970">-        // do nothing if module does not exist</tspan>

<tspan x="10" y="4986">-        try {</tspan>

<tspan x="10" y="5002">-            fs = require("fs");</tspan>

<tspan x="10" y="5018">-        } catch (ignore) {</tspan>

<tspan x="10" y="5034">-            return;</tspan>

<tspan x="10" y="5050">-        }</tspan>

<tspan x="10" y="5066">-        // try to write file</tspan>

<tspan x="10" y="5082">-        try {</tspan>

<tspan x="10" y="5098">-            fs.writeFileSync(file, data);</tspan>

<tspan x="10" y="5114">-        } catch (ignore) {</tspan>

<tspan x="10" y="5130">-            // mkdir -p</tspan>

<tspan x="10" y="5146">-            require("child_process").spawnSync(</tspan>

<tspan x="10" y="5162">-                "mkdir",</tspan>

<tspan x="10" y="5178">-                [</tspan>

<tspan x="10" y="5194">-                    "-p", require("path").dirname(file)</tspan>

<tspan x="10" y="5210">-                ],</tspan>

<tspan x="10" y="5226">-                {</tspan>

<tspan x="10" y="5242">-                    stdio: [</tspan>

<tspan x="10" y="5258">-                        "ignore", 1, 2</tspan>

<tspan x="10" y="5274">-                    ]</tspan>

<tspan x="10" y="5290">-                }</tspan>

<tspan x="10" y="5306">-            );</tspan>

<tspan x="10" y="5322">-            // rewrite file</tspan>

<tspan x="10" y="5338">-            fs.writeFileSync(file, data);</tspan>

<tspan x="10" y="5354">-        }</tspan>

<tspan x="10" y="5370">-    };</tspan>

<tspan x="10" y="5386">-    local.functionOrNop = function (fnc) {</tspan>

<tspan x="10" y="5402">-    /*</tspan>

<tspan x="10" y="5418">-     * this function will if &lt;fnc&gt; exists,</tspan>

<tspan x="10" y="5434">-     * return &lt;fnc&gt;,</tspan>

<tspan x="10" y="5450">-     * else return &lt;nop&gt;</tspan>

<tspan x="10" y="5466">-     */</tspan>

<tspan x="10" y="5482">-        return fnc || local.nop;</tspan>

<tspan x="10" y="5498">-    };</tspan>

<tspan x="10" y="5514">     local.identity = function (val) {</tspan>

<tspan x="10" y="5530">     /*</tspan>

<tspan x="10" y="5546">      * this function will return &lt;val&gt;</tspan>

<tspan x="10" y="5562">@@ -155,72 +120,44 @@</tspan>

<tspan x="10" y="5578">      */</tspan>

<tspan x="10" y="5594">         return;</tspan>

<tspan x="10" y="5610">     };</tspan>

<tspan x="10" y="5626">-    local.objectAssignDefault = function (target, source) {</tspan>

<tspan x="10" y="5642">+    local.objectAssignDefault = function (tgt = {}, src = {}, depth = 0) {</tspan>

<tspan x="10" y="5658">     /*</tspan>

<tspan x="10" y="5674">-     * this function will if items from &lt;target&gt; are null, undefined, or "",</tspan>

<tspan x="10" y="5690">-     * then overwrite them with items from &lt;source&gt;</tspan>

<tspan x="10" y="5706">+     * this function will if items from &lt;tgt&gt; are null, undefined, or "",</tspan>

<tspan x="10" y="5722">+     * then overwrite them with items from &lt;src&gt;</tspan>

<tspan x="10" y="5738">      */</tspan>

<tspan x="10" y="5754">-        target = target || {};</tspan>

<tspan x="10" y="5770">-        Object.keys(source || {}).forEach(function (key) {</tspan>

<tspan x="10" y="5786">-            if (</tspan>

<tspan x="10" y="5802">-                target[key] === null</tspan>

<tspan x="10" y="5818">-                || target[key] === undefined</tspan>

<tspan x="10" y="5834">-                || target[key] === ""</tspan>

<tspan x="10" y="5850">-            ) {</tspan>

<tspan x="10" y="5866">-                target[key] = target[key] || source[key];</tspan>

<tspan x="10" y="5882">-            }</tspan>

<tspan x="10" y="5898">-        });</tspan>

<tspan x="10" y="5914">-        return target;</tspan>

<tspan x="10" y="5930">+        let recurse;</tspan>

<tspan x="10" y="5946">+        recurse = function (tgt, src, depth) {</tspan>

<tspan x="10" y="5962">+            Object.entries(src).forEach(function ([</tspan>

<tspan x="10" y="5978">+                key, bb</tspan>

<tspan x="10" y="5994">+            ]) {</tspan>

<tspan x="10" y="6010">+                let aa;</tspan>

<tspan x="10" y="6026">+                aa = tgt[key];</tspan>

<tspan x="10" y="6042">+                if (aa === undefined || aa === null || aa === "") {</tspan>

<tspan x="10" y="6058">+                    tgt[key] = bb;</tspan>

<tspan x="10" y="6074">+                    return;</tspan>

<tspan x="10" y="6090">+                }</tspan>

<tspan x="10" y="6106">+                if (</tspan>

<tspan x="10" y="6122">+                    depth !== 0</tspan>

<tspan x="10" y="6138">+                    &amp;&amp; typeof aa === "object" &amp;&amp; aa &amp;&amp; !Array.isArray(aa)</tspan>

<tspan x="10" y="6154">+                    &amp;&amp; typeof bb === "object" &amp;&amp; bb &amp;&amp; !Array.isArray(bb)</tspan>

<tspan x="10" y="6170">+                ) {</tspan>

<tspan x="10" y="6186">+                    recurse(aa, bb, depth - 1);</tspan>

<tspan x="10" y="6202">+                }</tspan>

<tspan x="10" y="6218">+            });</tspan>

<tspan x="10" y="6234">+        };</tspan>

<tspan x="10" y="6250">+        recurse(tgt, src, depth | 0);</tspan>

<tspan x="10" y="6266">+        return tgt;</tspan>

<tspan x="10" y="6282">     };</tspan>

<tspan x="10" y="6298">-    local.querySelector = function (selectors) {</tspan>

<tspan x="10" y="6314">-    /*</tspan>

<tspan x="10" y="6330">-     * this function will return first dom-elem that match &lt;selectors&gt;</tspan>

<tspan x="10" y="6346">-     */</tspan>

<tspan x="10" y="6362">-        return (</tspan>

<tspan x="10" y="6378">-            typeof document === "object" &amp;&amp; document</tspan>

<tspan x="10" y="6394">-            &amp;&amp; typeof document.querySelector === "function"</tspan>

<tspan x="10" y="6410">-            &amp;&amp; document.querySelector(selectors)</tspan>

<tspan x="10" y="6426">-        ) || {};</tspan>

<tspan x="10" y="6442">-    };</tspan>

<tspan x="10" y="6458">-    local.querySelectorAll = function (selectors) {</tspan>

<tspan x="10" y="6474">-    /*</tspan>

<tspan x="10" y="6490">-     * this function will return dom-elem-list that match &lt;selectors&gt;</tspan>

<tspan x="10" y="6506">-     */</tspan>

<tspan x="10" y="6522">-        return (</tspan>

<tspan x="10" y="6538">-            typeof document === "object" &amp;&amp; document</tspan>

<tspan x="10" y="6554">-            &amp;&amp; typeof document.querySelectorAll === "function"</tspan>

<tspan x="10" y="6570">-            &amp;&amp; Array.from(document.querySelectorAll(selectors))</tspan>

<tspan x="10" y="6586">-        ) || [];</tspan>

<tspan x="10" y="6602">-    };</tspan>

<tspan x="10" y="6618">-    // require builtin</tspan>

<tspan x="10" y="6634">-    if (!local.isBrowser) {</tspan>

<tspan x="10" y="6650">-        local.assert = require("assert");</tspan>

<tspan x="10" y="6666">-        local.buffer = require("buffer");</tspan>

<tspan x="10" y="6682">-        local.child_process = require("child_process");</tspan>

<tspan x="10" y="6698">-        local.cluster = require("cluster");</tspan>

<tspan x="10" y="6714">-        local.crypto = require("crypto");</tspan>

<tspan x="10" y="6730">-        local.dgram = require("dgram");</tspan>

<tspan x="10" y="6746">-        local.dns = require("dns");</tspan>

<tspan x="10" y="6762">-        local.domain = require("domain");</tspan>

<tspan x="10" y="6778">-        local.events = require("events");</tspan>

<tspan x="10" y="6794">-        local.fs = require("fs");</tspan>

<tspan x="10" y="6810">-        local.http = require("http");</tspan>

<tspan x="10" y="6826">-        local.https = require("https");</tspan>

<tspan x="10" y="6842">-        local.net = require("net");</tspan>

<tspan x="10" y="6858">-        local.os = require("os");</tspan>

<tspan x="10" y="6874">-        local.path = require("path");</tspan>

<tspan x="10" y="6890">-        local.querystring = require("querystring");</tspan>

<tspan x="10" y="6906">-        local.readline = require("readline");</tspan>

<tspan x="10" y="6922">-        local.repl = require("repl");</tspan>

<tspan x="10" y="6938">-        local.stream = require("stream");</tspan>

<tspan x="10" y="6954">-        local.string_decoder = require("string_decoder");</tspan>

<tspan x="10" y="6970">-        local.timers = require("timers");</tspan>

<tspan x="10" y="6986">-        local.tls = require("tls");</tspan>

<tspan x="10" y="7002">-        local.tty = require("tty");</tspan>

<tspan x="10" y="7018">-        local.url = require("url");</tspan>

<tspan x="10" y="7034">-        local.util = require("util");</tspan>

<tspan x="10" y="7050">-        local.vm = require("vm");</tspan>

<tspan x="10" y="7066">-        local.zlib = require("zlib");</tspan>

<tspan x="10" y="7082">+    // bug-workaround - throw unhandledRejections in node-process</tspan>

<tspan x="10" y="7098">+    if (</tspan>

<tspan x="10" y="7114">+        typeof process === "object" &amp;&amp; process</tspan>

<tspan x="10" y="7130">+        &amp;&amp; typeof process.on === "function"</tspan>

<tspan x="10" y="7146">+        &amp;&amp; process.unhandledRejections !== "strict"</tspan>

<tspan x="10" y="7162">+    ) {</tspan>

<tspan x="10" y="7178">+        process.unhandledRejections = "strict";</tspan>

<tspan x="10" y="7194">+        process.on("unhandledRejection", function (err) {</tspan>

<tspan x="10" y="7210">+            throw err;</tspan>

<tspan x="10" y="7226">+        });</tspan>

<tspan x="10" y="7242">     }</tspan>

<tspan x="10" y="7258"> }((typeof globalThis === "object" &amp;&amp; globalThis) || window));</tspan>

<tspan x="10" y="7274"> // assets.utility2.header.js - end</tspan>

<tspan x="10" y="7290">jslint-autofix - modified and saved file /tmp/npmTestPublished/node_modules/apidoc-lite/test.js</tspan>

<tspan x="10" y="7306">jslint - 266ms - /tmp/npmTestPublished/node_modules/apidoc-lite/test.js</tspan>

<tspan x="10" y="7322">http-server listening on port 8081</tspan>

<tspan x="10" y="7338">--- /tmp/npmTestPublished/node_modules/apidoc-lite/lib.apidoc.js.autofix.old	2020-06-08 09:52:57\</tspan>
<tspan x="10" y="7354">.782213887 +0000</tspan>

<tspan x="10" y="7370">+++ /tmp/npmTestPublished/node_modules/apidoc-lite/lib.apidoc.js	2020-06-08 09:52:57.782213887 +\</tspan>
<tspan x="10" y="7386">0000</tspan>

<tspan x="10" y="7402">@@ -10,36 +10,29 @@</tspan>

<tspan x="10" y="7418"> </tspan>

<tspan x="10" y="7434"> /* istanbul instrument in package apidoc */</tspan>

<tspan x="10" y="7450"> // assets.utility2.header.js - start</tspan>

<tspan x="10" y="7466">-/* istanbul ignore next */</tspan>

<tspan x="10" y="7482"> /* jslint utility2:true */</tspan>

<tspan x="10" y="7498">+/* istanbul ignore next */</tspan>

<tspan x="10" y="7514">+// run shared js-env code - init-local</tspan>

<tspan x="10" y="7530"> (function (globalThis) {</tspan>

<tspan x="10" y="7546">     "use strict";</tspan>

<tspan x="10" y="7562">     let consoleError;</tspan>

<tspan x="10" y="7578">-    let debugName;</tspan>

<tspan x="10" y="7594">     let local;</tspan>

<tspan x="10" y="7610">-    debugName = "debug" + String("Inline");</tspan>

<tspan x="10" y="7626">     // init globalThis</tspan>

<tspan x="10" y="7642">     globalThis.globalThis = globalThis.globalThis || globalThis;</tspan>

<tspan x="10" y="7658">-    // init debug_inline</tspan>

<tspan x="10" y="7674">-    if (!globalThis[debugName]) {</tspan>

<tspan x="10" y="7690">+    // init debugInline</tspan>

<tspan x="10" y="7706">+    if (!globalThis.debugInline) {</tspan>

<tspan x="10" y="7722">         consoleError = console.error;</tspan>

<tspan x="10" y="7738">-        globalThis[debugName] = function (...argList) {</tspan>

<tspan x="10" y="7754">+        globalThis.debugInline = function (...argList) {</tspan>

<tspan x="10" y="7770">         /*</tspan>

<tspan x="10" y="7786">          * this function will both print &lt;argList&gt; to stderr</tspan>

<tspan x="10" y="7802">          * and return &lt;argList&gt;[0]</tspan>

<tspan x="10" y="7818">          */</tspan>

<tspan x="10" y="7834">-            consoleError("\n\n" + debugName);</tspan>

<tspan x="10" y="7850">+            consoleError("\n\ndebugInline");</tspan>

<tspan x="10" y="7866">             consoleError(...argList);</tspan>

<tspan x="10" y="7882">             consoleError("\n");</tspan>

<tspan x="10" y="7898">             return argList[0];</tspan>

<tspan x="10" y="7914">         };</tspan>

<tspan x="10" y="7930">     }</tspan>

<tspan x="10" y="7946">-    String.prototype.trimEnd = (</tspan>

<tspan x="10" y="7962">-        String.prototype.trimEnd || String.prototype.trimRight</tspan>

<tspan x="10" y="7978">-    );</tspan>

<tspan x="10" y="7994">-    String.prototype.trimStart = (</tspan>

<tspan x="10" y="8010">-        String.prototype.trimStart || String.prototype.trimLeft</tspan>

<tspan x="10" y="8026">-    );</tspan>

<tspan x="10" y="8042">     // init local</tspan>

<tspan x="10" y="8058">     local = {};</tspan>

<tspan x="10" y="8074">     local.local = local;</tspan>

<tspan x="10" y="8090">@@ -55,9 +48,39 @@</tspan>

<tspan x="10" y="8106">         local.isBrowser &amp;&amp; typeof globalThis.importScripts === "function"</tspan>

<tspan x="10" y="8122">     );</tspan>

<tspan x="10" y="8138">     // init function</tspan>

<tspan x="10" y="8154">+    local.assertJsonEqual = function (aa, bb) {</tspan>

<tspan x="10" y="8170">+    /*</tspan>

<tspan x="10" y="8186">+     * this function will assert JSON.stringify(&lt;aa&gt;) === JSON.stringify(&lt;bb&gt;)</tspan>

<tspan x="10" y="8202">+     */</tspan>

<tspan x="10" y="8218">+        let objectDeepCopyWithKeysSorted;</tspan>

<tspan x="10" y="8234">+        objectDeepCopyWithKeysSorted = function (obj) {</tspan>

<tspan x="10" y="8250">+        /*</tspan>

<tspan x="10" y="8266">+         * this function will recursively deep-copy &lt;obj&gt; with keys sorted</tspan>

<tspan x="10" y="8282">+         */</tspan>

<tspan x="10" y="8298">+            let sorted;</tspan>

<tspan x="10" y="8314">+            if (typeof obj !== "object" || !obj) {</tspan>

<tspan x="10" y="8330">+                return obj;</tspan>

<tspan x="10" y="8346">+            }</tspan>

<tspan x="10" y="8362">+            // recursively deep-copy list with child-keys sorted</tspan>

<tspan x="10" y="8378">+            if (Array.isArray(obj)) {</tspan>

<tspan x="10" y="8394">+                return obj.map(objectDeepCopyWithKeysSorted);</tspan>

<tspan x="10" y="8410">+            }</tspan>

<tspan x="10" y="8426">+            // recursively deep-copy obj with keys sorted</tspan>

<tspan x="10" y="8442">+            sorted = {};</tspan>

<tspan x="10" y="8458">+            Object.keys(obj).sort().forEach(function (key) {</tspan>

<tspan x="10" y="8474">+                sorted[key] = objectDeepCopyWithKeysSorted(obj[key]);</tspan>

<tspan x="10" y="8490">+            });</tspan>

<tspan x="10" y="8506">+            return sorted;</tspan>

<tspan x="10" y="8522">+        };</tspan>

<tspan x="10" y="8538">+        aa = JSON.stringify(objectDeepCopyWithKeysSorted(aa));</tspan>

<tspan x="10" y="8554">+        bb = JSON.stringify(objectDeepCopyWithKeysSorted(bb));</tspan>

<tspan x="10" y="8570">+        if (aa !== bb) {</tspan>

<tspan x="10" y="8586">+            throw new Error(JSON.stringify(aa) + " !== " + JSON.stringify(bb));</tspan>

<tspan x="10" y="8602">+        }</tspan>

<tspan x="10" y="8618">+    };</tspan>

<tspan x="10" y="8634">     local.assertOrThrow = function (passed, msg) {</tspan>

<tspan x="10" y="8650">     /*</tspan>

<tspan x="10" y="8666">-     * this function will throw err.&lt;msg&gt; if &lt;passed&gt; is falsy</tspan>

<tspan x="10" y="8682">+     * this function will throw &lt;msg&gt; if &lt;passed&gt; is falsy</tspan>

<tspan x="10" y="8698">      */</tspan>

<tspan x="10" y="8714">         if (passed) {</tspan>

<tspan x="10" y="8730">             return;</tspan>

<tspan x="10" y="8746">@@ -72,9 +95,9 @@</tspan>

<tspan x="10" y="8762">             ? msg</tspan>

<tspan x="10" y="8778">             : new Error(</tspan>

<tspan x="10" y="8794">                 typeof msg === "string"</tspan>

<tspan x="10" y="8810">-                // if msg is a string, then leave as is</tspan>

<tspan x="10" y="8826">+                // if msg is string, then leave as is</tspan>

<tspan x="10" y="8842">                 ? msg</tspan>

<tspan x="10" y="8858">-                // else JSON.stringify msg</tspan>

<tspan x="10" y="8874">+                // else JSON.stringify(msg)</tspan>

<tspan x="10" y="8890">                 : JSON.stringify(msg, undefined, 4)</tspan>

<tspan x="10" y="8906">             )</tspan>

<tspan x="10" y="8922">         );</tspan>

<tspan x="10" y="8938">@@ -88,71 +111,13 @@</tspan>

<tspan x="10" y="8954">         ii = 0;</tspan>

<tspan x="10" y="8970">         while (ii &lt; argList.length) {</tspan>

<tspan x="10" y="8986">             arg = argList[ii];</tspan>

<tspan x="10" y="9002">-            if (arg !== null &amp;&amp; arg !== undefined &amp;&amp; arg !== "") {</tspan>

<tspan x="10" y="9018">-                break;</tspan>

<tspan x="10" y="9034">+            if (arg !== undefined &amp;&amp; arg !== null &amp;&amp; arg !== "") {</tspan>

<tspan x="10" y="9050">+                return arg;</tspan>

<tspan x="10" y="9066">             }</tspan>

<tspan x="10" y="9082">             ii += 1;</tspan>

<tspan x="10" y="9098">         }</tspan>

<tspan x="10" y="9114">         return arg;</tspan>

<tspan x="10" y="9130">     };</tspan>

<tspan x="10" y="9146">-    local.fsRmrfSync = function (dir) {</tspan>

<tspan x="10" y="9162">-    /*</tspan>

<tspan x="10" y="9178">-     * this function will sync "rm -rf" &lt;dir&gt;</tspan>

<tspan x="10" y="9194">-     */</tspan>

<tspan x="10" y="9210">-        let child_process;</tspan>

<tspan x="10" y="9226">-        // do nothing if module does not exist</tspan>

<tspan x="10" y="9242">-        try {</tspan>

<tspan x="10" y="9258">-            child_process = require("child_process");</tspan>

<tspan x="10" y="9274">-        } catch (ignore) {</tspan>

<tspan x="10" y="9290">-            return;</tspan>

<tspan x="10" y="9306">-        }</tspan>

<tspan x="10" y="9322">-        child_process.spawnSync("rm", [</tspan>

<tspan x="10" y="9338">-            "-rf", dir</tspan>

<tspan x="10" y="9354">-        ], {</tspan>

<tspan x="10" y="9370">-            stdio: [</tspan>

<tspan x="10" y="9386">-                "ignore", 1, 2</tspan>

<tspan x="10" y="9402">-            ]</tspan>

<tspan x="10" y="9418">-        });</tspan>

<tspan x="10" y="9434">-    };</tspan>

<tspan x="10" y="9450">-    local.fsWriteFileWithMkdirpSync = function (file, data) {</tspan>

<tspan x="10" y="9466">-    /*</tspan>

<tspan x="10" y="9482">-     * this function will sync write &lt;data&gt; to &lt;file&gt; with "mkdir -p"</tspan>

<tspan x="10" y="9498">-     */</tspan>

<tspan x="10" y="9514">-        let fs;</tspan>

<tspan x="10" y="9530">-        // do nothing if module does not exist</tspan>

<tspan x="10" y="9546">-        try {</tspan>

<tspan x="10" y="9562">-            fs = require("fs");</tspan>

<tspan x="10" y="9578">-        } catch (ignore) {</tspan>

<tspan x="10" y="9594">-            return;</tspan>

<tspan x="10" y="9610">-        }</tspan>

<tspan x="10" y="9626">-        // try to write file</tspan>

<tspan x="10" y="9642">-        try {</tspan>

<tspan x="10" y="9658">-            fs.writeFileSync(file, data);</tspan>

<tspan x="10" y="9674">-        } catch (ignore) {</tspan>

<tspan x="10" y="9690">-            // mkdir -p</tspan>

<tspan x="10" y="9706">-            require("child_process").spawnSync(</tspan>

<tspan x="10" y="9722">-                "mkdir",</tspan>

<tspan x="10" y="9738">-                [</tspan>

<tspan x="10" y="9754">-                    "-p", require("path").dirname(file)</tspan>

<tspan x="10" y="9770">-                ],</tspan>

<tspan x="10" y="9786">-                {</tspan>

<tspan x="10" y="9802">-                    stdio: [</tspan>

<tspan x="10" y="9818">-                        "ignore", 1, 2</tspan>

<tspan x="10" y="9834">-                    ]</tspan>

<tspan x="10" y="9850">-                }</tspan>

<tspan x="10" y="9866">-            );</tspan>

<tspan x="10" y="9882">-            // rewrite file</tspan>

<tspan x="10" y="9898">-            fs.writeFileSync(file, data);</tspan>

<tspan x="10" y="9914">-        }</tspan>

<tspan x="10" y="9930">-    };</tspan>

<tspan x="10" y="9946">-    local.functionOrNop = function (fnc) {</tspan>

<tspan x="10" y="9962">-    /*</tspan>

<tspan x="10" y="9978">-     * this function will if &lt;fnc&gt; exists,</tspan>

<tspan x="10" y="9994">-     * return &lt;fnc&gt;,</tspan>

<tspan x="10" y="10010">-     * else return &lt;nop&gt;</tspan>

<tspan x="10" y="10026">-     */</tspan>

<tspan x="10" y="10042">-        return fnc || local.nop;</tspan>

<tspan x="10" y="10058">-    };</tspan>

<tspan x="10" y="10074">     local.identity = function (val) {</tspan>

<tspan x="10" y="10090">     /*</tspan>

<tspan x="10" y="10106">      * this function will return &lt;val&gt;</tspan>

<tspan x="10" y="10122">@@ -165,72 +130,44 @@</tspan>

<tspan x="10" y="10138">      */</tspan>

<tspan x="10" y="10154">         return;</tspan>

<tspan x="10" y="10170">     };</tspan>

<tspan x="10" y="10186">-    local.objectAssignDefault = function (target, source) {</tspan>

<tspan x="10" y="10202">+    local.objectAssignDefault = function (tgt = {}, src = {}, depth = 0) {</tspan>

<tspan x="10" y="10218">     /*</tspan>

<tspan x="10" y="10234">-     * this function will if items from &lt;target&gt; are null, undefined, or "",</tspan>

<tspan x="10" y="10250">-     * then overwrite them with items from &lt;source&gt;</tspan>

<tspan x="10" y="10266">+     * this function will if items from &lt;tgt&gt; are null, undefined, or "",</tspan>

<tspan x="10" y="10282">+     * then overwrite them with items from &lt;src&gt;</tspan>

<tspan x="10" y="10298">      */</tspan>

<tspan x="10" y="10314">-        target = target || {};</tspan>

<tspan x="10" y="10330">-        Object.keys(source || {}).forEach(function (key) {</tspan>

<tspan x="10" y="10346">-            if (</tspan>

<tspan x="10" y="10362">-                target[key] === null</tspan>

<tspan x="10" y="10378">-                || target[key] === undefined</tspan>

<tspan x="10" y="10394">-                || target[key] === ""</tspan>

<tspan x="10" y="10410">-            ) {</tspan>

<tspan x="10" y="10426">-                target[key] = target[key] || source[key];</tspan>

<tspan x="10" y="10442">-            }</tspan>

<tspan x="10" y="10458">-        });</tspan>

<tspan x="10" y="10474">-        return target;</tspan>

<tspan x="10" y="10490">-    };</tspan>

<tspan x="10" y="10506">-    local.querySelector = function (selectors) {</tspan>

<tspan x="10" y="10522">-    /*</tspan>

<tspan x="10" y="10538">-     * this function will return first dom-elem that match &lt;selectors&gt;</tspan>

<tspan x="10" y="10554">-     */</tspan>

<tspan x="10" y="10570">-        return (</tspan>

<tspan x="10" y="10586">-            typeof document === "object" &amp;&amp; document</tspan>

<tspan x="10" y="10602">-            &amp;&amp; typeof document.querySelector === "function"</tspan>

<tspan x="10" y="10618">-            &amp;&amp; document.querySelector(selectors)</tspan>

<tspan x="10" y="10634">-        ) || {};</tspan>

<tspan x="10" y="10650">-    };</tspan>

<tspan x="10" y="10666">-    local.querySelectorAll = function (selectors) {</tspan>

<tspan x="10" y="10682">-    /*</tspan>

<tspan x="10" y="10698">-     * this function will return dom-elem-list that match &lt;selectors&gt;</tspan>

<tspan x="10" y="10714">-     */</tspan>

<tspan x="10" y="10730">-        return (</tspan>

<tspan x="10" y="10746">-            typeof document === "object" &amp;&amp; document</tspan>

<tspan x="10" y="10762">-            &amp;&amp; typeof document.querySelectorAll === "function"</tspan>

<tspan x="10" y="10778">-            &amp;&amp; Array.from(document.querySelectorAll(selectors))</tspan>

<tspan x="10" y="10794">-        ) || [];</tspan>

<tspan x="10" y="10810">+        let recurse;</tspan>

<tspan x="10" y="10826">+        recurse = function (tgt, src, depth) {</tspan>

<tspan x="10" y="10842">+            Object.entries(src).forEach(function ([</tspan>

<tspan x="10" y="10858">+                key, bb</tspan>

<tspan x="10" y="10874">+            ]) {</tspan>

<tspan x="10" y="10890">+                let aa;</tspan>

<tspan x="10" y="10906">+                aa = tgt[key];</tspan>

<tspan x="10" y="10922">+                if (aa === undefined || aa === null || aa === "") {</tspan>

<tspan x="10" y="10938">+                    tgt[key] = bb;</tspan>

<tspan x="10" y="10954">+                    return;</tspan>

<tspan x="10" y="10970">+                }</tspan>

<tspan x="10" y="10986">+                if (</tspan>

<tspan x="10" y="11002">+                    depth !== 0</tspan>

<tspan x="10" y="11018">+                    &amp;&amp; typeof aa === "object" &amp;&amp; aa &amp;&amp; !Array.isArray(aa)</tspan>

<tspan x="10" y="11034">+                    &amp;&amp; typeof bb === "object" &amp;&amp; bb &amp;&amp; !Array.isArray(bb)</tspan>

<tspan x="10" y="11050">+                ) {</tspan>

<tspan x="10" y="11066">+                    recurse(aa, bb, depth - 1);</tspan>

<tspan x="10" y="11082">+                }</tspan>

<tspan x="10" y="11098">+            });</tspan>

<tspan x="10" y="11114">+        };</tspan>

<tspan x="10" y="11130">+        recurse(tgt, src, depth | 0);</tspan>

<tspan x="10" y="11146">+        return tgt;</tspan>

<tspan x="10" y="11162">     };</tspan>

<tspan x="10" y="11178">-    // require builtin</tspan>

<tspan x="10" y="11194">-    if (!local.isBrowser) {</tspan>

<tspan x="10" y="11210">-        local.assert = require("assert");</tspan>

<tspan x="10" y="11226">-        local.buffer = require("buffer");</tspan>

<tspan x="10" y="11242">-        local.child_process = require("child_process");</tspan>

<tspan x="10" y="11258">-        local.cluster = require("cluster");</tspan>

<tspan x="10" y="11274">-        local.crypto = require("crypto");</tspan>

<tspan x="10" y="11290">-        local.dgram = require("dgram");</tspan>

<tspan x="10" y="11306">-        local.dns = require("dns");</tspan>

<tspan x="10" y="11322">-        local.domain = require("domain");</tspan>

<tspan x="10" y="11338">-        local.events = require("events");</tspan>

<tspan x="10" y="11354">-        local.fs = require("fs");</tspan>

<tspan x="10" y="11370">-        local.http = require("http");</tspan>

<tspan x="10" y="11386">-        local.https = require("https");</tspan>

<tspan x="10" y="11402">-        local.net = require("net");</tspan>

<tspan x="10" y="11418">-        local.os = require("os");</tspan>

<tspan x="10" y="11434">-        local.path = require("path");</tspan>

<tspan x="10" y="11450">-        local.querystring = require("querystring");</tspan>

<tspan x="10" y="11466">-        local.readline = require("readline");</tspan>

<tspan x="10" y="11482">-        local.repl = require("repl");</tspan>

<tspan x="10" y="11498">-        local.stream = require("stream");</tspan>

<tspan x="10" y="11514">-        local.string_decoder = require("string_decoder");</tspan>

<tspan x="10" y="11530">-        local.timers = require("timers");</tspan>

<tspan x="10" y="11546">-        local.tls = require("tls");</tspan>

<tspan x="10" y="11562">-        local.tty = require("tty");</tspan>

<tspan x="10" y="11578">-        local.url = require("url");</tspan>

<tspan x="10" y="11594">-        local.util = require("util");</tspan>

<tspan x="10" y="11610">-        local.vm = require("vm");</tspan>

<tspan x="10" y="11626">-        local.zlib = require("zlib");</tspan>

<tspan x="10" y="11642">+    // bug-workaround - throw unhandledRejections in node-process</tspan>

<tspan x="10" y="11658">+    if (</tspan>

<tspan x="10" y="11674">+        typeof process === "object" &amp;&amp; process</tspan>

<tspan x="10" y="11690">+        &amp;&amp; typeof process.on === "function"</tspan>

<tspan x="10" y="11706">+        &amp;&amp; process.unhandledRejections !== "strict"</tspan>

<tspan x="10" y="11722">+    ) {</tspan>

<tspan x="10" y="11738">+        process.unhandledRejections = "strict";</tspan>

<tspan x="10" y="11754">+        process.on("unhandledRejection", function (err) {</tspan>

<tspan x="10" y="11770">+            throw err;</tspan>

<tspan x="10" y="11786">+        });</tspan>

<tspan x="10" y="11802">     }</tspan>

<tspan x="10" y="11818"> }((typeof globalThis === "object" &amp;&amp; globalThis) || window));</tspan>

<tspan x="10" y="11834"> // assets.utility2.header.js - end</tspan>

<tspan x="10" y="11850">@@ -269,15 +206,17 @@</tspan>

<tspan x="10" y="11866"> /*</tspan>

<tspan x="10" y="11882">  * this function will run cli with given &lt;opt&gt;</tspan>

<tspan x="10" y="11898">  */</tspan>

<tspan x="10" y="11914">-    local.cliDict._eval = local.cliDict._eval || function () {</tspan>

<tspan x="10" y="11930">+    let cliDict;</tspan>

<tspan x="10" y="11946">+    cliDict = local.cliDict;</tspan>

<tspan x="10" y="11962">+    cliDict._eval = cliDict._eval || function () {</tspan>

<tspan x="10" y="11978">     /*</tspan>

<tspan x="10" y="11994">      * &lt;code&gt;</tspan>

<tspan x="10" y="12010">      * will eval &lt;code&gt;</tspan>

<tspan x="10" y="12026">      */</tspan>

<tspan x="10" y="12042">         globalThis.local = local;</tspan>

<tspan x="10" y="12058">-        local.vm.runInThisContext(process.argv[3]);</tspan>

<tspan x="10" y="12074">+        require("vm").runInThisContext(process.argv[3]);</tspan>

<tspan x="10" y="12090">     };</tspan>

<tspan x="10" y="12106">-    local.cliDict._help = local.cliDict._help || function () {</tspan>

<tspan x="10" y="12122">+    cliDict._help = cliDict._help || function () {</tspan>

<tspan x="10" y="12138">     /*</tspan>

<tspan x="10" y="12154">      *</tspan>

<tspan x="10" y="12170">      * will print help</tspan>

<tspan x="10" y="12186">@@ -312,11 +251,11 @@</tspan>

<tspan x="10" y="12202">             /\) \{\n(?:| {4})\/\*\n(?: | {5})\*((?: &lt;[^&gt;]*?&gt;| \.\.\.)*?)\n(?: | {5})\* (will .*\</tspan>
<tspan x="10" y="12218">?\S)\n(?: | {5})\*\/\n(?: {4}| {8})\S/</tspan>

<tspan x="10" y="12234">         );</tspan>

<tspan x="10" y="12250">         strDict = {};</tspan>

<tspan x="10" y="12266">-        Object.keys(local.cliDict).sort().forEach(function (key, ii) {</tspan>

<tspan x="10" y="12282">+        Object.keys(cliDict).sort().forEach(function (key, ii) {</tspan>

<tspan x="10" y="12298">             if (key[0] === "_" &amp;&amp; key !== "_default") {</tspan>

<tspan x="10" y="12314">                 return;</tspan>

<tspan x="10" y="12330">             }</tspan>

<tspan x="10" y="12346">-            str = String(local.cliDict[key]);</tspan>

<tspan x="10" y="12362">+            str = String(cliDict[key]);</tspan>

<tspan x="10" y="12378">             if (key === "_default") {</tspan>

<tspan x="10" y="12394">                 key = "";</tspan>

<tspan x="10" y="12410">             }</tspan>

<tspan x="10" y="12426">@@ -382,13 +321,13 @@</tspan>

<tspan x="10" y="12442">         }).join("\n\n");</tspan>

<tspan x="10" y="12458">         console.log(str);</tspan>

<tspan x="10" y="12474">     };</tspan>

<tspan x="10" y="12490">-    local.cliDict["--eval"] = local.cliDict["--eval"] || local.cliDict._eval;</tspan>

<tspan x="10" y="12506">-    local.cliDict["--help"] = local.cliDict["--help"] || local.cliDict._help;</tspan>

<tspan x="10" y="12522">-    local.cliDict["-e"] = local.cliDict["-e"] || local.cliDict._eval;</tspan>

<tspan x="10" y="12538">-    local.cliDict["-h"] = local.cliDict["-h"] || local.cliDict._help;</tspan>

<tspan x="10" y="12554">-    local.cliDict._default = local.cliDict._default || local.cliDict._help;</tspan>

<tspan x="10" y="12570">-    local.cliDict.help = local.cliDict.help || local.cliDict._help;</tspan>

<tspan x="10" y="12586">-    local.cliDict._interactive = local.cliDict._interactive || function () {</tspan>

<tspan x="10" y="12602">+    cliDict["--eval"] = cliDict["--eval"] || cliDict._eval;</tspan>

<tspan x="10" y="12618">+    cliDict["--help"] = cliDict["--help"] || cliDict._help;</tspan>

<tspan x="10" y="12634">+    cliDict["-e"] = cliDict["-e"] || cliDict._eval;</tspan>

<tspan x="10" y="12650">+    cliDict["-h"] = cliDict["-h"] || cliDict._help;</tspan>

<tspan x="10" y="12666">+    cliDict._default = cliDict._default || cliDict._help;</tspan>

<tspan x="10" y="12682">+    cliDict.help = cliDict.help || cliDict._help;</tspan>

<tspan x="10" y="12698">+    cliDict._interactive = cliDict._interactive || function () {</tspan>

<tspan x="10" y="12714">     /*</tspan>

<tspan x="10" y="12730">      *</tspan>

<tspan x="10" y="12746">      * will start interactive-mode</tspan>

<tspan x="10" y="12762">@@ -398,33 +337,27 @@</tspan>

<tspan x="10" y="12778">             useGlobal: true</tspan>

<tspan x="10" y="12794">         });</tspan>

<tspan x="10" y="12810">     };</tspan>

<tspan x="10" y="12826">-    local.cliDict["--interactive"] = (</tspan>

<tspan x="10" y="12842">-        local.cliDict["--interactive"]</tspan>

<tspan x="10" y="12858">-        || local.cliDict._interactive</tspan>

<tspan x="10" y="12874">-    );</tspan>

<tspan x="10" y="12890">-    local.cliDict["-i"] = local.cliDict["-i"] || local.cliDict._interactive;</tspan>

<tspan x="10" y="12906">-    local.cliDict._version = local.cliDict._version || function () {</tspan>

<tspan x="10" y="12922">+    cliDict["--interactive"] = cliDict["--interactive"] || cliDict._interactive;</tspan>

<tspan x="10" y="12938">+    cliDict["-i"] = cliDict["-i"] || cliDict._interactive;</tspan>

<tspan x="10" y="12954">+    cliDict._version = cliDict._version || function () {</tspan>

<tspan x="10" y="12970">     /*</tspan>

<tspan x="10" y="12986">      *</tspan>

<tspan x="10" y="13002">      * will print version</tspan>

<tspan x="10" y="13018">      */</tspan>

<tspan x="10" y="13034">         console.log(require(__dirname + "/package.json").version);</tspan>

<tspan x="10" y="13050">     };</tspan>

<tspan x="10" y="13066">-    local.cliDict["--version"] = (</tspan>

<tspan x="10" y="13082">-        local.cliDict["--version"]</tspan>

<tspan x="10" y="13098">-        || local.cliDict._version</tspan>

<tspan x="10" y="13114">-    );</tspan>

<tspan x="10" y="13130">-    local.cliDict["-v"] = local.cliDict["-v"] || local.cliDict._version;</tspan>

<tspan x="10" y="13146">+    cliDict["--version"] = cliDict["--version"] || cliDict._version;</tspan>

<tspan x="10" y="13162">+    cliDict["-v"] = cliDict["-v"] || cliDict._version;</tspan>

<tspan x="10" y="13178">     // default to --help command if no arguments are given</tspan>

<tspan x="10" y="13194">     if (process.argv.length &lt;= 2) {</tspan>

<tspan x="10" y="13210">-        local.cliDict._help();</tspan>

<tspan x="10" y="13226">+        cliDict._help();</tspan>

<tspan x="10" y="13242">         return;</tspan>

<tspan x="10" y="13258">     }</tspan>

<tspan x="10" y="13274">-    if (local.cliDict[process.argv[2]]) {</tspan>

<tspan x="10" y="13290">-        local.cliDict[process.argv[2]]();</tspan>

<tspan x="10" y="13306">+    if (cliDict[process.argv[2]]) {</tspan>

<tspan x="10" y="13322">+        cliDict[process.argv[2]]();</tspan>

<tspan x="10" y="13338">         return;</tspan>

<tspan x="10" y="13354">     }</tspan>

<tspan x="10" y="13370">-    local.cliDict._default();</tspan>

<tspan x="10" y="13386">+    cliDict._default();</tspan>

<tspan x="10" y="13402"> };</tspan>

<tspan x="10" y="13418"> </tspan>

<tspan x="10" y="13434"> local.moduleDirname = function (module, pathList) {</tspan>

<tspan x="10" y="13450">@@ -432,23 +365,20 @@</tspan>

<tspan x="10" y="13466">  * this function will search &lt;pathList&gt; for &lt;module&gt;'s __dirname</tspan>

<tspan x="10" y="13482">  */</tspan>

<tspan x="10" y="13498">     let result;</tspan>

<tspan x="10" y="13514">-    // search process.cwd()</tspan>

<tspan x="10" y="13530">+    // search "."</tspan>

<tspan x="10" y="13546">     if (!module || module === "." || module.indexOf("/") &gt;= 0) {</tspan>

<tspan x="10" y="13562">-        return require("path").resolve(process.cwd(), module || "");</tspan>

<tspan x="10" y="13578">+        return require("path").resolve(module || "");</tspan>

<tspan x="10" y="13594">     }</tspan>

<tspan x="10" y="13610">     // search pathList</tspan>

<tspan x="10" y="13626">-    Array.from([</tspan>

<tspan x="10" y="13642">+    [].concat(</tspan>

<tspan x="10" y="13658">         pathList,</tspan>

<tspan x="10" y="13674">         require("module").globalPaths,</tspan>

<tspan x="10" y="13690">         [</tspan>

<tspan x="10" y="13706">             process.env.HOME + "/node_modules", "/usr/local/lib/node_modules"</tspan>

<tspan x="10" y="13722">         ]</tspan>

<tspan x="10" y="13738">-    ]).flat().some(function (path) {</tspan>

<tspan x="10" y="13754">+    ).some(function (path) {</tspan>

<tspan x="10" y="13770">         try {</tspan>

<tspan x="10" y="13786">-            result = require("path").resolve(</tspan>

<tspan x="10" y="13802">-                process.cwd(),</tspan>

<tspan x="10" y="13818">-                path + "/" + module</tspan>

<tspan x="10" y="13834">-            );</tspan>

<tspan x="10" y="13850">+            result = require("path").resolve(path + "/" + module);</tspan>

<tspan x="10" y="13866">             result = require("fs").statSync(result).isDirectory() &amp;&amp; result;</tspan>

<tspan x="10" y="13882">             return result;</tspan>

<tspan x="10" y="13898">         } catch (ignore) {</tspan>

<tspan x="10" y="13914">@@ -628,7 +558,7 @@</tspan>

<tspan x="10" y="13930"> ';</tspan>

<tspan x="10" y="13946"> /* jslint ignore:end */</tspan>

<tspan x="10" y="13962"> </tspan>

<tspan x="10" y="13978">-local.templateRender = function (template, dict, opt, ii) {</tspan>

<tspan x="10" y="13994">+local.templateRender = function (template, dict, opt = {}, ii = 0) {</tspan>

<tspan x="10" y="14010"> /*</tspan>

<tspan x="10" y="14026">  * this function will render &lt;template&gt; with given &lt;dict&gt;</tspan>

<tspan x="10" y="14042">  */</tspan>

<tspan x="10" y="14058">@@ -642,7 +572,6 @@</tspan>

<tspan x="10" y="14074">     if (dict === null || dict === undefined) {</tspan>

<tspan x="10" y="14090">         dict = {};</tspan>

<tspan x="10" y="14106">     }</tspan>

<tspan x="10" y="14122">-    opt = opt || {};</tspan>

<tspan x="10" y="14138">     getVal = function (key) {</tspan>

<tspan x="10" y="14154">         argList = key.split(" ");</tspan>

<tspan x="10" y="14170">         val = dict;</tspan>

<tspan x="10" y="14186">@@ -683,7 +612,7 @@</tspan>

<tspan x="10" y="14202">             partial = (</tspan>

<tspan x="10" y="14218">                 getVal(key)</tspan>

<tspan x="10" y="14234">                 ? partial[0]</tspan>

<tspan x="10" y="14250">-                // handle 'unless' case</tspan>

<tspan x="10" y="14266">+                // handle "unless" case</tspan>

<tspan x="10" y="14282">                 : partial.slice(1).join("{{#unless " + key + "}}")</tspan>

<tspan x="10" y="14298">             );</tspan>

<tspan x="10" y="14314">             // recurse with partial</tspan>

<tspan x="10" y="14330">@@ -718,7 +647,7 @@</tspan>

<tspan x="10" y="14346">         );</tspan>

<tspan x="10" y="14362">         match = rgx.exec(template);</tspan>

<tspan x="10" y="14378">     }</tspan>

<tspan x="10" y="14394">-    // search for keys in the template</tspan>

<tspan x="10" y="14410">+    // search for keys in template</tspan>

<tspan x="10" y="14426">     return template.replace((</tspan>

<tspan x="10" y="14442">         /\{\{[^}]+?\}\}/g</tspan>

<tspan x="10" y="14458">     ), function (match0) {</tspan>

<tspan x="10" y="14474">@@ -841,7 +770,7 @@</tspan>

<tspan x="10" y="14490"> </tspan>

<tspan x="10" y="14506"> local.tryCatchOnError = function (fnc, onError) {</tspan>

<tspan x="10" y="14522"> /*</tspan>

<tspan x="10" y="14538">- * this function will run the fnc in a tryCatch block,</tspan>

<tspan x="10" y="14554">+ * this function will run &lt;fnc&gt; in tryCatch block,</tspan>

<tspan x="10" y="14570">  * else call onError with errCaught</tspan>

<tspan x="10" y="14586">  */</tspan>

<tspan x="10" y="14602">     let result;</tspan>

<tspan x="10" y="14618">@@ -849,9 +778,9 @@</tspan>

<tspan x="10" y="14634">     local.assertOrThrow(typeof onError === "function", typeof onError);</tspan>

<tspan x="10" y="14650">     try {</tspan>

<tspan x="10" y="14666">         // reset errCaught</tspan>

<tspan x="10" y="14682">-        local._debugTryCatchError = null;</tspan>

<tspan x="10" y="14698">+        delete local._debugTryCatchError;</tspan>

<tspan x="10" y="14714">         result = fnc();</tspan>

<tspan x="10" y="14730">-        local._debugTryCatchError = null;</tspan>

<tspan x="10" y="14746">+        delete local._debugTryCatchError;</tspan>

<tspan x="10" y="14762">         return result;</tspan>

<tspan x="10" y="14778">     } catch (errCaught) {</tspan>

<tspan x="10" y="14794">         // debug errCaught</tspan>

<tspan x="10" y="14810">@@ -876,6 +805,9 @@</tspan>

<tspan x="10" y="14826">     let tmp;</tspan>

<tspan x="10" y="14842">     let toString;</tspan>

<tspan x="10" y="14858">     let trimStart;</tspan>

<tspan x="10" y="14874">+    if (opt.modeNop) {</tspan>

<tspan x="10" y="14890">+        return "";</tspan>

<tspan x="10" y="14906">+    }</tspan>

<tspan x="10" y="14922">     elemCreate = function (module, prefix, key) {</tspan>

<tspan x="10" y="14938">     /*</tspan>

<tspan x="10" y="14954">      * this function will create the apidoc-elem in given &lt;module&gt;</tspan>

<tspan x="10" y="14970">@@ -948,13 +880,13 @@</tspan>

<tspan x="10" y="14986">      */</tspan>

<tspan x="10" y="15002">         let result;</tspan>

<tspan x="10" y="15018">         local.tryCatchOnError(function () {</tspan>

<tspan x="10" y="15034">-            file = local.path.resolve(opt.dir, file);</tspan>

<tspan x="10" y="15050">+            file = require("path").resolve(opt.dir, file);</tspan>

<tspan x="10" y="15066">             console.error("apidocCreate - readExample " + file);</tspan>

<tspan x="10" y="15082">             result = "";</tspan>

<tspan x="10" y="15098">             result = local.identity(</tspan>

<tspan x="10" y="15114">                 "\n\n\n\n\n\n\n\n"</tspan>

<tspan x="10" y="15130">                 // bug-workaround - truncate example to manageable size</tspan>

<tspan x="10" y="15146">-                + local.fs.readFileSync(file, "utf8").slice(0, 262144)</tspan>

<tspan x="10" y="15162">+                + require("fs").readFileSync(file, "utf8").slice(0, 262144)</tspan>

<tspan x="10" y="15178">                 + "\n\n\n\n\n\n\n\n"</tspan>

<tspan x="10" y="15194">             ).replace((</tspan>

<tspan x="10" y="15210">                 /\r\n*/g</tspan>

<tspan x="10" y="15226">@@ -1003,7 +935,7 @@</tspan>

<tspan x="10" y="15242">         opt.dir,</tspan>

<tspan x="10" y="15258">         opt.modulePathList || require("module").paths</tspan>

<tspan x="10" y="15274">     );</tspan>

<tspan x="10" y="15290">-    local.objectSetDefault(opt, {</tspan>

<tspan x="10" y="15306">+    local.objectAssignDefault(opt, {</tspan>

<tspan x="10" y="15322">         env: {</tspan>

<tspan x="10" y="15338">             npm_package_description: ""</tspan>

<tspan x="10" y="15354">         },</tspan>

<tspan x="10" y="15370">@@ -1036,7 +968,7 @@</tspan>

<tspan x="10" y="15386">             opt.env["npm_package_" + key] = tmp;</tspan>

<tspan x="10" y="15402">         }</tspan>

<tspan x="10" y="15418">     });</tspan>

<tspan x="10" y="15434">-    local.objectSetDefault(opt, {</tspan>

<tspan x="10" y="15450">+    local.objectAssignDefault(opt, {</tspan>

<tspan x="10" y="15466">         blacklistDict: {</tspan>

<tspan x="10" y="15482">             globalThis</tspan>

<tspan x="10" y="15498">         },</tspan>

<tspan x="10" y="15514">@@ -1062,7 +994,7 @@</tspan>

<tspan x="10" y="15530">         opt.exampleList = opt.exampleList.concat(</tspan>

<tspan x="10" y="15546">             // find . -maxdepth 1 -mindepth 1 -name "*.js" -type f</tspan>

<tspan x="10" y="15562">             // https://stackoverflow.com/questions/4509624/how-to-limit-depth-for-recursive-fil\</tspan>
<tspan x="10" y="15578">e-list</tspan>

<tspan x="10" y="15594">-            local.child_process.execSync(</tspan>

<tspan x="10" y="15610">+            require("child_process").execSync(</tspan>

<tspan x="10" y="15626">                 "find \"" + opt.dir</tspan>

<tspan x="10" y="15642">                 + "\" -maxdepth " + depth + " -mindepth " + depth</tspan>

<tspan x="10" y="15658">                 + " -type f | sed -e \"s|" + opt.dir</tspan>

<tspan x="10" y="15674">@@ -1128,7 +1060,7 @@</tspan>

<tspan x="10" y="15690">         }());</tspan>

<tspan x="10" y="15706">     }</tspan>

<tspan x="10" y="15722">     // normalize moduleMain</tspan>

<tspan x="10" y="15738">-    moduleMain = local.objectSetDefault(tmp, moduleMain);</tspan>

<tspan x="10" y="15754">+    moduleMain = local.objectAssignDefault(tmp, moduleMain);</tspan>

<tspan x="10" y="15770">     opt.moduleDict[opt.env.npm_package_name] = moduleMain;</tspan>

<tspan x="10" y="15786">     // init circularSet - builtins</tspan>

<tspan x="10" y="15802">     [</tspan>

<tspan x="10" y="15818">@@ -1178,18 +1110,6 @@</tspan>

<tspan x="10" y="15834">     });</tspan>

<tspan x="10" y="15850">     // init moduleDict child</tspan>

<tspan x="10" y="15866">     local.apidocModuleDictAdd(opt, opt.moduleDict);</tspan>

<tspan x="10" y="15882">-    // init swgg.apiDict</tspan>

<tspan x="10" y="15898">-    Object.keys(</tspan>

<tspan x="10" y="15914">-        (moduleMain.swgg &amp;&amp; moduleMain.swgg.apiDict) || {}</tspan>

<tspan x="10" y="15930">-    ).forEach(function (key) {</tspan>

<tspan x="10" y="15946">-        tmp = "swgg.apiDict";</tspan>

<tspan x="10" y="15962">-        opt.moduleDict[tmp] = opt.moduleDict[tmp] || {};</tspan>

<tspan x="10" y="15978">-        tmp = opt.moduleDict[tmp];</tspan>

<tspan x="10" y="15994">-        tmp[key + ".ajax"] = (</tspan>

<tspan x="10" y="16010">-            moduleMain.swgg.apiDict[key]</tspan>

<tspan x="10" y="16026">-            &amp;&amp; moduleMain.swgg.apiDict[key].ajax</tspan>

<tspan x="10" y="16042">-        );</tspan>

<tspan x="10" y="16058">-    });</tspan>

<tspan x="10" y="16074">     // init moduleExtraDict</tspan>

<tspan x="10" y="16090">     opt.moduleExtraDict[opt.env.npm_package_name] = (</tspan>

<tspan x="10" y="16106">         opt.moduleExtraDict[opt.env.npm_package_name] || {}</tspan>

<tspan x="10" y="16122">@@ -1201,7 +1121,7 @@</tspan>

<tspan x="10" y="16138">         opt.libFileList = opt.libFileList.concat(</tspan>

<tspan x="10" y="16154">             // find . -maxdepth 1 -mindepth 1 -name "*.js" -type f</tspan>

<tspan x="10" y="16170">             // https://stackoverflow.com/questions/4509624/how-to-limit-depth-for-recursive-fil\</tspan>
<tspan x="10" y="16186">e-list</tspan>

<tspan x="10" y="16202">-            local.child_process.execSync(</tspan>

<tspan x="10" y="16218">+            require("child_process").execSync(</tspan>

<tspan x="10" y="16234">                 "find \"" + opt.dir</tspan>

<tspan x="10" y="16250">                 + "\" -maxdepth " + depth + " -mindepth " + depth</tspan>

<tspan x="10" y="16266">                 + " -name \"*.js\" -type f | sed -e \"s|" + opt.dir</tspan>

<tspan x="10" y="16282">@@ -1233,7 +1153,10 @@</tspan>

<tspan x="10" y="16298">     opt.libFileList.every(function (file) {</tspan>

<tspan x="10" y="16314">         local.tryCatchOnError(function () {</tspan>

<tspan x="10" y="16330">             tmp = {};</tspan>

<tspan x="10" y="16346">-            tmp.name = local.path.basename(file).replace("lib.", "").replace((</tspan>

<tspan x="10" y="16362">+            tmp.name = require("path").basename(file).replace(</tspan>

<tspan x="10" y="16378">+                "lib.",</tspan>

<tspan x="10" y="16394">+                ""</tspan>

<tspan x="10" y="16410">+            ).replace((</tspan>

<tspan x="10" y="16426">                 /\.[^.]*?$/</tspan>

<tspan x="10" y="16442">             ), "").replace((</tspan>

<tspan x="10" y="16458">                 /\W/g</tspan>

<tspan x="10" y="16474">jslint-autofix - modified and saved file /tmp/npmTestPublished/node_modules/apidoc-lite/lib.apid\</tspan>
<tspan x="10" y="16490">oc.js</tspan>

<tspan x="10" y="16506">jslint - 681ms - /tmp/npmTestPublished/node_modules/apidoc-lite/lib.apidoc.js</tspan>

<tspan x="10" y="16522">testRunDefault - 781 ms - [node test-case 1 of 9 passed] - testCase_apidocCreate_default</tspan>

<tspan x="10" y="16538">testRunDefault - 809 ms - [node test-case 2 of 9 passed] - testCase_buildLib_default</tspan>

<tspan x="10" y="16554">testRunDefault - 816 ms - [node test-case 3 of 9 passed] - testCase_buildReadme_default</tspan>

<tspan x="10" y="16570">testRunDefault - 818 ms - [node test-case 4 of 9 passed] - testCase_buildTest_default</tspan>

<tspan x="10" y="16586">testRunDefault - 818 ms - [node test-case 5 of 9 passed] - testCase_nop_default</tspan>

<tspan x="10" y="16602">testRunDefault - 924 ms - [node test-case 6 of 9 passed] - testCase_buildApidoc_default</tspan>

<tspan x="10" y="16618">jslint - 6ms - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/app/assets.apidoc.html</tspan>

<tspan x="10" y="16634">jslint - 11ms - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/app/assets.example.html</tspan>

<tspan x="10" y="16650">jslint - 12ms - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/app/index.html</tspan>

<tspan x="10" y="16666">jslint - 18ms - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/app/assets.utility2.htm\</tspan>
<tspan x="10" y="16682">l</tspan>

<tspan x="10" y="16698">jslint - 22ms - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/app/assets.test.js</tspan>

<tspan x="10" y="16714">jslint - 24ms - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/app/assets.example.js</tspan>

<tspan x="10" y="16730">jslint - 32ms - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/app/assets.apidoc.js</tspan>

<tspan x="10" y="16746">testRunDefault - 1145 ms - [node test-case 7 of 9 passed] - testCase_buildApp_default</tspan>

<tspan x="10" y="16762">&gt; http-server listening on port 58136</tspan>

<tspan x="10" y="16778"></tspan>

<tspan x="10" y="16794">DevTools listening on ws://127.0.0.1:37109/devtools/browser/a5922b6d-e420-4202-ae10-21db33b2b00c</tspan>

<tspan x="10" y="16810">[0608/095258.803798:ERROR:command_buffer_proxy_impl.cc(122)] ContextResult::kTransientFailure: F\</tspan>
<tspan x="10" y="16826">ailed to send GpuChannelMsg_CreateCommandBuffer.</tspan>

<tspan x="10" y="16842">[0608/095258.803600:WARNING:ipc_message_attachment_set.cc(49)] MessageAttachmentSet destroyed wi\</tspan>
<tspan x="10" y="16858">th unconsumed attachments: 0/1</tspan>

<tspan x="10" y="16874">[0608/095258.814286:ERROR:command_buffer_proxy_impl.cc(122)] ContextResult::kTransientFailure: F\</tspan>
<tspan x="10" y="16890">ailed to send GpuChannelMsg_CreateCommandBuffer.</tspan>

<tspan x="10" y="16906">[0608/095258.825330:WARNING:ipc_message_attachment_set.cc(49)] MessageAttachmentSet destroyed wi\</tspan>
<tspan x="10" y="16922">th unconsumed attachments: 0/1</tspan>

<tspan x="10" y="16938">[0608/095258.857861:WARNING:ipc_message_attachment_set.cc(49)] MessageAttachmentSet destroyed wi\</tspan>
<tspan x="10" y="16954">th unconsumed attachments: 0/1</tspan>

<tspan x="10" y="16970">[0608/095258.860351:WARNING:ipc_message_attachment_set.cc(49)] MessageAttachmentSet destroyed wi\</tspan>
<tspan x="10" y="16986">th unconsumed attachments: 0/1</tspan>

<tspan x="10" y="17002">[0608/095259.097109:INFO:CONSOLE(8)] "testRunDefault - 5 ms - [browser test-case 1 of 2 passed] \</tspan>
<tspan x="10" y="17018">- testCase_apidocCreate_default", source: http://127.0.0.1:8081/assets.example.js (8)</tspan>

<tspan x="10" y="17034">[0608/095259.105494:INFO:CONSOLE(8)] "testRunDefault - 14 ms - [browser test-case 2 of 2 passed]\</tspan>
<tspan x="10" y="17050"> - testCase_nop_default", source: http://127.0.0.1:8081/assets.example.js (8)</tspan>

<tspan x="10" y="17066">[0608/095259.187694:INFO:CONSOLE(8)] "domOnEventWindowOnloadTimeElapsed = 192", source: http://1\</tspan>
<tspan x="10" y="17082">27.0.0.1:8081/assets.example.js (8)</tspan>

<tspan x="10" y="17098">testRunDefault - 1864 ms - [node test-case 8 of 9 passed] - testCase_webpage_default</tspan>

<tspan x="10" y="17114">testRunDefault - 6013 ms - testCase pending - testCase_assetsAppJs_standalone ...</tspan>

<tspan x="10" y="17130">testRunDefault - 6137 ms - [node test-case 9 of 9 passed] - testCase_assetsAppJs_standalone</tspan>

<tspan x="10" y="17146">----------------|---------|---------|---------|---------|</tspan>

<tspan x="10" y="17162">File            | % Stmts | % Brchs | % Funcs | % Lines |</tspan>

<tspan x="10" y="17178">----------------|---------|---------|---------|---------|</tspan>

<tspan x="10" y="17194">All files       |   99.18 |      97 |   97.67 |   99.18 |</tspan>

<tspan x="10" y="17210">apidoc-lite/    |   99.18 |      97 |   97.67 |   99.18 |</tspan>

<tspan x="10" y="17226">  example.js    |     100 |     100 |     100 |     100 |</tspan>

<tspan x="10" y="17242">  lib.apidoc.js |   98.77 |    98.7 |   96.63 |   98.77 |</tspan>

<tspan x="10" y="17258">  test.js       |     100 |   85.51 |     100 |     100 |</tspan>

<tspan x="10" y="17274">----------------|---------|---------|---------|---------|</tspan>

<tspan x="10" y="17290"></tspan>

<tspan x="10" y="17306">wrote file - coverage-report - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/coverage\</tspan>
<tspan x="10" y="17322">.html/coverage.txt</tspan>

<tspan x="10" y="17338">wrote file - coverage-report - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/coverage\</tspan>
<tspan x="10" y="17354">.html/index.html</tspan>

<tspan x="10" y="17370">wrote file - coverage-report - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/coverage\</tspan>
<tspan x="10" y="17386">.html/apidoc-lite/index.html</tspan>

<tspan x="10" y="17402">wrote file - coverage-report - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/coverage\</tspan>
<tspan x="10" y="17418">.html/apidoc-lite/example.js.html</tspan>

<tspan x="10" y="17434">wrote file - coverage-report - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/coverage\</tspan>
<tspan x="10" y="17450">.html/apidoc-lite/lib.apidoc.js.html</tspan>

<tspan x="10" y="17466">wrote file - coverage-report - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/coverage\</tspan>
<tspan x="10" y="17482">.html/apidoc-lite/test.js.html</tspan>

<tspan x="10" y="17498">wrote file - coverage-report - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/coverage\</tspan>
<tspan x="10" y="17514">.html/coverage.all.html</tspan>

<tspan x="10" y="17530">wrote file - coverage-report - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/coverage\</tspan>
<tspan x="10" y="17546">.html/coverage.json</tspan>

<tspan x="10" y="17562">wrote file - coverage-report - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/coverage\</tspan>
<tspan x="10" y="17578">.html/coverage.include.json</tspan>

<tspan x="10" y="17594">wrote file - coverage-report - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/coverage\</tspan>
<tspan x="10" y="17610">.badge.svg</tspan>

<tspan x="10" y="17626">istanbul - created coverage file /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/covera\</tspan>
<tspan x="10" y="17642">ge.html/index.html</tspan>

<tspan x="10" y="17658"></tspan>

<tspan x="10" y="17674">-------------------------------------------------------</tspan>

<tspan x="10" y="17690">| test-report - npmTestPublished - browser - / - Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537\</tspan>
<tspan x="10" y="17706">.36 (KHTML, like Gecko) HeadlessChrome/83.0.4103.97 Safari/537.36 - 2020-06-08T09:52:59.046Z</tspan>

<tspan x="10" y="17722">|      17 ms            0 failed        2 passed      |</tspan>

<tspan x="10" y="17738">-------------------------------------------------------</tspan>

<tspan x="10" y="17754">| test-report - npmTestPublished - node - linux v14.4.0 - 2020-06-08T09:52:56.852Z</tspan>

<tspan x="10" y="17770">|    6137 ms            0 failed        9 passed      |</tspan>

<tspan x="10" y="17786">-------------------------------------------------------</tspan>

<tspan x="10" y="17802"></tspan>

<tspan x="10" y="17818">wrote file - test-report - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/test-report.\</tspan>
<tspan x="10" y="17834">html</tspan>

<tspan x="10" y="17850">wrote file - test-report - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/build.badge.\</tspan>
<tspan x="10" y="17866">svg</tspan>

<tspan x="10" y="17882">wrote file - test-report - /tmp/npmTestPublished/node_modules/apidoc-lite/tmp/build/test-report.\</tspan>
<tspan x="10" y="17898">badge.svg</tspan>

<tspan x="10" y="17914"></tspan>

<tspan x="10" y="17930">npmTestPublished - 0 failed tests</tspan>

<tspan x="10" y="17946"></tspan>

<tspan x="10" y="17962"></tspan>

<tspan x="10" y="17978">\x1b[35m[MODE_BUILD=npmTestPublished]\x1b[0m - 2020-06-08T09:53:03.776Z - EXIT_CODE - 0</tspan>

</text>
</svg>
