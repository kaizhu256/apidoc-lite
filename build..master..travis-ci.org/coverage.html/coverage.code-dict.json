{"/home/travis/build/kaizhu256/node-apidoc-lite/test.js":"/* istanbul instrument in package apidoc */\n/* jslint-utility2 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 4,\n    maxlen: 100,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init isBrowser\n        local.isBrowser = typeof window === \"object\" &&\n            typeof window.XMLHttpRequest === \"function\" &&\n            window.document &&\n            typeof window.document.querySelectorAll === \"function\";\n        // init global\n        local.global = local.isBrowser\n            ? window\n            : global;\n        // re-init local\n        local = local.global.local = (local.global.utility2 ||\n            require('utility2')).requireReadme();\n        // init test\n        local.testRunInit(local);\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        local.testCase_apidocCreate_default = function (options, onError) {\n        /*\n         * this function will test apidocCreate's default handling-behavior-behavior\n         */\n            if (local.isBrowser) {\n                onError(null, options);\n                return;\n            }\n            options = {\n                // test readExample-error handling-behavior\n                exampleFileList: ['undefined'],\n                libFileList: [\n                    // test libFileList-error handling-behavior\n                    'lib.error.js'\n                ],\n                moduleDict: {\n                    // test invalid module-name handling-behavior\n                    'invalid syntax': {}\n                },\n                // test packageJson handling-behavior\n                packageJson: {\n                    _: '',\n                    aa: 'bb',\n                    emailDict: { email: 'a@a.com'},\n                    emailList: [{ email: 'a@a.com' }],\n                    readme: ''\n                }\n            };\n            // test weird-module handling-behavior\n            options.moduleDict.undefined = function () {\n                return;\n            };\n            options.moduleDict.undefined();\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/\n            // Working_with_Objects#Defining_getters_and_setters\n            Object.defineProperty(options.moduleDict.undefined, 'error', {\n                get: local.throwError,\n                set: local.throwError\n            });\n            options.moduleDict.undefined.toString = local.throwError;\n            local.apidocCreate(options);\n            // validate options\n            local.assertJsonEqual(options.packageJson._, undefined);\n            local.assertJsonEqual(options.packageJson.aa, 'bb');\n            local.assertJsonEqual(options.packageJson.emailDict.email, undefined);\n            local.assertJsonEqual(options.packageJson.emailList[0].email, undefined);\n            local.assertJsonEqual(options.packageJson.readme, undefined);\n            // test swgg.apiDict handling-behavior\n            options = {\n                moduleDict: { undefined: { swgg: { apiDict: { 'aa bb': {} } } } },\n                packageJson: {}\n            };\n            local.apidocCreate(options);\n            // test modeNoApidoc handling-behavior\n            options = { modeNoApidoc: true };\n            local.apidocCreate(options);\n            // test invalid-require handling-behavior\n            options = { require: local.nop };\n            local.apidocCreate(options);\n            onError(null, options);\n        };\n    }());\n}());\n","/home/travis/build/kaizhu256/node-apidoc-lite/lib.apidoc.js":"// usr/bin/env node\n/* istanbul instrument in package apidoc */\n/* jslint-utility2 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 4,\n    maxlen: 100,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    /* istanbul ignore next */\n    (function () {\n        // init debug_inline\n        (function () {\n            var consoleError, context, key;\n            context = (typeof window === \"object\" && window) || global;\n            key = \"debug_inline\".replace(\"_i\", \"I\");\n            if (context[key]) {\n                return;\n            }\n            consoleError = console.error;\n            context[key] = function (arg0) {\n            /*\n             * this function will both print arg0 to stderr and return it\n             */\n                // debug arguments\n                context[\"_\" + key + \"Arguments\"] = arguments;\n                consoleError(\"\\n\\n\" + key);\n                consoleError.apply(console, arguments);\n                consoleError(\"\\n\");\n                // return arg0 for inspection\n                return arg0;\n            };\n        }());\n        // init local\n        local = {};\n        // init isBrowser\n        local.isBrowser = typeof window === \"object\" &&\n            typeof window.XMLHttpRequest === \"function\" &&\n            window.document &&\n            typeof window.document.querySelectorAll === \"function\";\n        // init global\n        local.global = local.isBrowser\n            ? window\n            : global;\n        // re-init local\n        local = local.global.utility2_rollup ||\n            // local.global.utility2_rollup_old || require('./assets.utility2.rollup.js') ||\n            local;\n        // init nop\n        local.nop = function () {\n        /*\n         * this function will do nothing\n         */\n            return;\n        };\n        // init exports\n        if (local.isBrowser) {\n            local.global.utility2_apidoc = local;\n        } else {\n            // require builtins\n            // local.assert = require('assert');\n            local.buffer = require('buffer');\n            local.child_process = require('child_process');\n            local.cluster = require('cluster');\n            local.console = require('console');\n            local.constants = require('constants');\n            local.crypto = require('crypto');\n            local.dgram = require('dgram');\n            local.dns = require('dns');\n            local.domain = require('domain');\n            local.events = require('events');\n            local.fs = require('fs');\n            local.http = require('http');\n            local.https = require('https');\n            local.module = require('module');\n            local.net = require('net');\n            local.os = require('os');\n            local.path = require('path');\n            local.process = require('process');\n            local.punycode = require('punycode');\n            local.querystring = require('querystring');\n            local.readline = require('readline');\n            local.repl = require('repl');\n            local.stream = require('stream');\n            local.string_decoder = require('string_decoder');\n            local.timers = require('timers');\n            local.tls = require('tls');\n            local.tty = require('tty');\n            local.url = require('url');\n            local.util = require('util');\n            local.v8 = require('v8');\n            local.vm = require('vm');\n            local.zlib = require('zlib');\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n        }\n        // init lib main\n        local.local = local.apidoc = local;\n\n\n\n        /* validateLineSortedReset */\n        local.assert = function (passed, message, onError) {\n        /*\n         * this function will throw the error message if passed is falsey\n         */\n            var error;\n            if (passed) {\n                return;\n            }\n            error = message && message.message\n                // if message is an error-object, then leave it as is\n                ? message\n                : new Error(typeof message === 'string'\n                    // if message is a string, then leave it as is\n                    ? message\n                    // else JSON.stringify message\n                    : JSON.stringify(message));\n            // debug error\n            local._debugAssertError = error;\n            onError = onError || function (error) {\n                throw error;\n            };\n            onError(error);\n        };\n\n        local.cliRun = function (fnc) {\n        /*\n         * this function will run the cli\n         */\n            var nop;\n            nop = function () {\n            /*\n             * this function will do nothing\n             */\n                return;\n            };\n            local.cliDict._eval = local.cliDict._eval || function () {\n            /*\n             * <code>\n             * # eval code\n             */\n                local.global.local = local;\n                require('vm').runInThisContext(process.argv[3]);\n            };\n            local.cliDict['--eval'] = local.cliDict['--eval'] || local.cliDict._eval;\n            local.cliDict['-e'] = local.cliDict['-e'] || local.cliDict._eval;\n            local.cliDict._help = local.cliDict._help || function (options) {\n            /*\n             *\n             * # print help\n             */\n                var commandList, file, packageJson, text, textDict;\n                commandList = [{\n                    arg: '<arg2> ...',\n                    description: 'usage:',\n                    command: ['<arg1>']\n                }];\n                file = __filename.replace((/.*\\//), '');\n                packageJson = require('./package.json');\n                textDict = {};\n                Object.keys(local.cliDict).sort().forEach(function (key, ii) {\n                    if (key[0] === '_' && key !== '_default') {\n                        return;\n                    }\n                    text = String(local.cliDict[key]);\n                    if (key === '_default') {\n                        key = '<>';\n                    }\n                    ii = textDict[text] = textDict[text] || (ii + 1);\n                    if (commandList[ii]) {\n                        commandList[ii].command.push(key);\n                    } else {\n                        commandList[ii] = (/\\n +?\\*(.*?)\\n +?\\*(.*?)\\n/).exec(text);\n                        // coverage-hack - ignore else-statement\n                        nop(local.global.__coverage__ && (function () {\n                            commandList[ii] = commandList[ii] || ['', '', ''];\n                        }()));\n                        commandList[ii] = {\n                            arg: commandList[ii][1].trim(),\n                            command: [key],\n                            description: commandList[ii][2].trim()\n                        };\n                    }\n                });\n                (options && options.modeError\n                    ? console.error\n                    : console.log)((options && options.modeError\n                    ? '\\u001b[31merror: missing <arg1>\\u001b[39m\\n\\n'\n                    : '') + packageJson.name + ' (' + packageJson.version + ')\\n\\n' + commandList\n                    .filter(function (element) {\n                        return element;\n                    }).map(function (element) {\n                        return (element.description + '\\n' +\n                            file + '  ' +\n                            element.command.sort().join('|') + '  ' +\n                            element.arg.replace((/ +/g), '  '))\n                                .replace((/<>\\||\\|<>|<> {2}/), '')\n                                .trim();\n                    })\n                    .join('\\n\\n') + '\\n\\nexample:\\n' + file +\n                    '  --eval  \\'console.log(\"hello world\")\\'');\n            };\n            local.cliDict['--help'] = local.cliDict['--help'] || local.cliDict._help;\n            local.cliDict['-h'] = local.cliDict['-h'] || local.cliDict._help;\n            local.cliDict._default = local.cliDict._default || local.cliDict._help;\n            local.cliDict.help = local.cliDict.help || local.cliDict._help;\n            local.cliDict._interactive = local.cliDict._interactive || function () {\n            /*\n             *\n             * # start interactive-mode\n             */\n                local.global.local = local;\n                local.replStart();\n            };\n            if (local.replStart) {\n                local.cliDict['--interactive'] = local.cliDict['--interactive'] ||\n                    local.cliDict._interactive;\n                local.cliDict['-i'] = local.cliDict['-i'] || local.cliDict._interactive;\n            }\n            local.cliDict._version = local.cliDict._version || function () {\n            /*\n             *\n             * # print version\n             */\n                console.log(require(__dirname + '/package.json').version);\n            };\n            local.cliDict['--version'] = local.cliDict['--version'] || local.cliDict._version;\n            local.cliDict['-v'] = local.cliDict['-v'] || local.cliDict._version;\n            // run fnc()\n            fnc = fnc || function () {\n                // default to --help command if no arguments are given\n                if (process.argv.length <= 2 && !local.cliDict._default.modeNoCommand) {\n                    local.cliDict._help({ modeError: true });\n                    process.exit(1);\n                    return;\n                }\n                if (local.cliDict[process.argv[2]]) {\n                    local.cliDict[process.argv[2]]();\n                    return;\n                }\n                local.cliDict._default();\n            };\n            fnc();\n        };\n\n        local.moduleDirname = function (module, modulePathList) {\n        /*\n         * this function will search modulePathList for the module's __dirname\n         */\n            var result;\n            // search process.cwd()\n            if (!module || module === '.' || module.indexOf('/') >= 0) {\n                return require('path').resolve(process.cwd(), module || '');\n            }\n            // search modulePathList\n            ['node_modules']\n                .concat(modulePathList)\n                .concat(require('module').globalPaths)\n                .concat([process.env.HOME + '/node_modules', '/usr/local/lib/node_modules'])\n                .some(function (modulePath) {\n                    try {\n                        result = require('path').resolve(process.cwd(), modulePath + '/' + module);\n                        result = require('fs').statSync(result).isDirectory() && result;\n                        return result;\n                    } catch (errorCaught) {\n                        result = null;\n                    }\n                    return result;\n                });\n            return result || '';\n        };\n\n        local.objectSetDefault = function (arg0, defaults, depth) {\n        /*\n         * this function will recursively set defaults for undefined-items in arg0\n         */\n            arg0 = arg0 || {};\n            defaults = defaults || {};\n            Object.keys(defaults).forEach(function (key) {\n                var arg2, defaults2;\n                arg2 = arg0[key];\n                // handle misbehaving getter\n                try {\n                    defaults2 = defaults[key];\n                } catch (ignore) {\n                }\n                if (defaults2 === undefined) {\n                    return;\n                }\n                // init arg0[key] to default value defaults[key]\n                switch (arg2) {\n                case '':\n                case null:\n                case undefined:\n                    arg0[key] = defaults2;\n                    return;\n                }\n                // if arg2 and defaults2 are both non-null and non-array objects,\n                // then recurse with arg2 and defaults2\n                if (depth > 1 &&\n                        // arg2 is a non-null and non-array object\n                        typeof arg2 === 'object' && arg2 && !Array.isArray(arg2) &&\n                        // defaults2 is a non-null and non-array object\n                        typeof defaults2 === 'object' && defaults2 && !Array.isArray(defaults2)) {\n                    // recurse\n                    local.objectSetDefault(arg2, defaults2, depth - 1);\n                }\n            });\n            return arg0;\n        };\n\n        local.stringHtmlSafe = function (text) {\n        /*\n         * this function will make the text html-safe\n         * https://stackoverflow.com/questions/7381974/which-characters-need-to-be-escaped-on-html\n         */\n            return text\n                .replace((/\"/g), '&quot;')\n                .replace((/&/g), '&amp;')\n                .replace((/'/g), '&apos;')\n                .replace((/</g), '&lt;')\n                .replace((/>/g), '&gt;')\n                .replace((/&amp;(amp;|apos;|gt;|lt;|quot;)/ig), '&$1');\n        };\n\n        local.templateRender = function (template, dict, options) {\n        /*\n         * this function will render the template with the given dict\n         */\n            var argList, getValue, match, renderPartial, rgx, tryCatch, skip, value;\n            dict = dict || {};\n            options = options || {};\n            getValue = function (key) {\n                argList = key.split(' ');\n                value = dict;\n                if (argList[0] === '#this/') {\n                    return;\n                }\n                // iteratively lookup nested values in the dict\n                argList[0].split('.').forEach(function (key) {\n                    value = value && value[key];\n                });\n                return value;\n            };\n            renderPartial = function (match0, helper, key, partial) {\n                switch (helper) {\n                case 'each':\n                case 'eachTrimRightComma':\n                    value = getValue(key);\n                    value = Array.isArray(value)\n                        ? value.map(function (dict) {\n                            // recurse with partial\n                            return local.templateRender(partial, dict, options);\n                        }).join('')\n                        : '';\n                    // remove trailing-comma from last element\n                    if (helper === 'eachTrimRightComma') {\n                        value = value.trimRight().replace((/,$/), '');\n                    }\n                    return value;\n                case 'if':\n                    partial = partial.split('{{#unless ' + key + '}}');\n                    partial = getValue(key)\n                        ? partial[0]\n                        // handle 'unless' case\n                        : partial.slice(1).join('{{#unless ' + key + '}}');\n                    // recurse with partial\n                    return local.templateRender(partial, dict, options);\n                case 'unless':\n                    return getValue(key)\n                        ? ''\n                        // recurse with partial\n                        : local.templateRender(partial, dict, options);\n                default:\n                    // recurse with partial\n                    return match0[0] + local.templateRender(match0.slice(1), dict, options);\n                }\n            };\n            tryCatch = function (fnc, message) {\n            /*\n             * this function will prepend the message to errorCaught\n             */\n                try {\n                    return fnc();\n                } catch (errorCaught) {\n                    errorCaught.message = message + errorCaught.message;\n                    throw errorCaught;\n                }\n            };\n            // render partials\n            rgx = (/\\{\\{#(\\w+) ([^}]+?)\\}\\}/g);\n            template = template || '';\n            for (match = rgx.exec(template); match; match = rgx.exec(template)) {\n                rgx.lastIndex += 1 - match[0].length;\n                template = template.replace(\n                    new RegExp('\\\\{\\\\{#(' + match[1] + ') (' + match[2] +\n                        ')\\\\}\\\\}([\\\\S\\\\s]*?)\\\\{\\\\{/' + match[1] + ' ' + match[2] +\n                        '\\\\}\\\\}'),\n                    renderPartial\n                );\n            }\n            // search for keys in the template\n            return template.replace((/\\{\\{[^}]+?\\}\\}/g), function (match0) {\n                var markdownToHtml, notHtmlSafe;\n                notHtmlSafe = options.notHtmlSafe;\n                return tryCatch(function () {\n                    getValue(match0.slice(2, -2));\n                    if (value === undefined) {\n                        return match0;\n                    }\n                    argList.slice(1).forEach(function (arg0, ii, list) {\n                        switch (arg0) {\n                        case 'alphanumeric':\n                            value = value.replace((/\\W/g), '_');\n                            break;\n                        case 'decodeURIComponent':\n                            value = decodeURIComponent(value);\n                            break;\n                        case 'encodeURIComponent':\n                            value = encodeURIComponent(value);\n                            break;\n                        case 'jsonStringify':\n                            value = JSON.stringify(value);\n                            break;\n                        case 'jsonStringify4':\n                            value = JSON.stringify(value, null, 4);\n                            break;\n                        case 'markdownSafe':\n                            value = value.replace((/`/g), '\\'');\n                            break;\n                        case 'markdownToHtml':\n                            markdownToHtml = true;\n                            break;\n                        case 'notHtmlSafe':\n                            notHtmlSafe = true;\n                            break;\n                        case 'truncate':\n                            skip = ii + 1;\n                            if (value.length > list[skip]) {\n                                value = value.slice(0, list[skip] - 3).trimRight() + '...';\n                            }\n                            break;\n                        // default to String.prototype[arg0]()\n                        default:\n                            if (ii === skip) {\n                                break;\n                            }\n                            value = value[arg0]();\n                            break;\n                        }\n                    });\n                    value = String(value);\n                    // default to htmlSafe\n                    if (!notHtmlSafe) {\n                        value = value\n                            .replace((/&/g), '&amp;')\n                            .replace((/\"/g), '&quot;')\n                            .replace((/'/g), '&apos;')\n                            .replace((/</g), '&lt;')\n                            .replace((/>/g), '&gt;')\n                            .replace((/&amp;(amp;|apos;|gt;|lt;|quot;)/ig), '&$1');\n                    }\n                    if (markdownToHtml && typeof local.marked === 'function') {\n                        value = local.marked(value)\n                            .replace((/&amp;(amp;|apos;|gt;|lt;|quot;)/ig), '&$1');\n                    }\n                    return value;\n                }, 'templateRender could not render expression ' + JSON.stringify(match0) + '\\n');\n            });\n        };\n\n        local.tryCatchOnError = function (fnc, onError) {\n        /*\n         * this function will try to run the fnc in a try-catch block,\n         * else call onError with the errorCaught\n         */\n            var result;\n            // validate onError\n            local.assert(typeof onError === 'function', typeof onError);\n            try {\n                // reset errorCaught\n                local._debugTryCatchError = null;\n                result = fnc();\n                local._debugTryCatchError = null;\n                return result;\n            } catch (errorCaught) {\n                // debug errorCaught\n                local._debugTryCatchError = errorCaught;\n                return onError(errorCaught);\n            }\n        };\n    }());\n\n\n\n    // run shared js-env code - init-before\n/* jslint-ignore-begin */\nlocal.templateApidocHtml = '\\\n<div class=\"apidocDiv\">\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\n.apidocDiv {\\n\\\n    background: #fff;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n}\\n\\\n.apidocDiv a[href] {\\n\\\n    color: #33f;\\n\\\n    font-weight: bold;\\n\\\n    text-decoration: none;\\n\\\n}\\n\\\n.apidocDiv a[href]:hover {\\n\\\n    text-decoration: underline;\\n\\\n}\\n\\\n.apidocCodeCommentSpan {\\n\\\n    background: #bbf;\\n\\\n    color: #000;\\n\\\n    display: block;\\n\\\n}\\n\\\n.apidocCodeKeywordSpan {\\n\\\n    color: #d00;\\n\\\n    font-weight: bold;\\n\\\n}\\n\\\n.apidocCodePre {\\n\\\n    background: #eef;\\n\\\n    border: 1px solid;\\n\\\n    color: #777;\\n\\\n    overflow-wrap: break-word;\\n\\\n    padding: 5px;\\n\\\n    white-space: pre-wrap;\\n\\\n}\\n\\\n.apidocFooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n.apidocModuleLi {\\n\\\n    margin-top: 10px;\\n\\\n}\\n\\\n.apidocSectionDiv {\\n\\\n    border-top: 1px solid;\\n\\\n    margin-top: 20px;\\n\\\n}\\n\\\n.apidocSignatureSpan {\\n\\\n    color: #777;\\n\\\n    font-weight: bold;\\n\\\n}\\n\\\n</style>\\n\\\n<h1>api documentation for\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n    >{{env.npm_package_name}} ({{env.npm_package_version}})</a>\\n\\\n</h1>\\n\\\n<h4>{{env.npm_package_description}}</h4>\\n\\\n<div class=\"apidocSectionDiv\"><a\\n\\\n    href=\"#apidoc.tableOfContents\"\\n\\\n    id=\"apidoc.tableOfContents\"\\n\\\n><h1>table of contents</h1></a><ol>\\n\\\n    {{#each moduleList}}\\n\\\n    <li class=\"apidocModuleLi\"><a href=\"#{{id}}\">module {{name}}</a><ol>\\n\\\n        {{#each elementList}}\\n\\\n        <li>\\n\\\n            {{#if source}}\\n\\\n            <a class=\"apidocElementLiA\" href=\"#{{id}}\">\\n\\\n            {{name}}\\n\\\n            <span class=\"apidocSignatureSpan\">{{signature}}</span>\\n\\\n            </a>\\n\\\n            {{#unless source}}\\n\\\n            <span class=\"apidocSignatureSpan\">{{name}}</span>\\n\\\n            {{/if source}}\\n\\\n        </li>\\n\\\n        {{/each elementList}}\\n\\\n    </ol></li>\\n\\\n    {{/each moduleList}}\\n\\\n</ol></div>\\n\\\n{{#each moduleList}}\\n\\\n<div class=\"apidocSectionDiv\">\\n\\\n<h1><a href=\"#{{id}}\" id=\"{{id}}\">module {{name}}</a></h1>\\n\\\n    {{#each elementList}}\\n\\\n    {{#if source}}\\n\\\n    <h2>\\n\\\n        <a href=\"#{{id}}\" id=\"{{id}}\">\\n\\\n        {{name}}\\n\\\n        <span class=\"apidocSignatureSpan\">{{signature}}</span>\\n\\\n        </a>\\n\\\n    </h2>\\n\\\n    <ul>\\n\\\n    <li>description and source-code<pre class=\"apidocCodePre\">{{source truncate 4096}}</pre></li>\\n\\\n    <li>example usage<pre class=\"apidocCodePre\">{{example}}</pre></li>\\n\\\n    </ul>\\n\\\n    {{/if source}}\\n\\\n    {{/each elementList}}\\n\\\n</div>\\n\\\n{{/each moduleList}}\\n\\\n<div class=\"apidocFooterDiv\">\\n\\\n    [ this document was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</div>\\n\\\n';\n/* jslint-ignore-end */\n\n\n\n    // run shared js-env code - function\n    (function () {\n        local.apidocCreate = function (options) {\n        /*\n         * this function will create the apidoc from options.dir\n         */\n            var elementCreate, module, moduleMain, readExample, tmp, toString, trimLeft;\n            elementCreate = function (module, prefix, key) {\n            /*\n             * this function will create the apidoc-element in the given module\n             */\n                var element;\n                if (options.modeNoApidoc) {\n                    return element;\n                }\n                element = {};\n                element.moduleName = prefix.split('.');\n                // handle case where module is a function\n                if (element.moduleName.slice(-1)[0] === key) {\n                    element.moduleName.pop();\n                }\n                element.moduleName = element.moduleName.join('.');\n                element.id = encodeURIComponent('apidoc.element.' + prefix + '.' + key);\n                element.typeof = typeof module[key];\n                element.name = (element.typeof + ' <span class=\"apidocSignatureSpan\">' +\n                    element.moduleName + '.</span>' + key)\n                    // handle case where module is a function\n                    .replace('>.<', '><');\n                if (element.typeof !== 'function') {\n                    return element;\n                }\n                // init source\n                element.source = local.stringHtmlSafe(trimLeft(toString(module[key])) || 'n/a')\n                    .replace((/\\([\\S\\s]*?\\)/), function (match0) {\n                        // init signature\n                        element.signature = match0\n                            .replace((/ *?\\/\\*[\\S\\s]*?\\*\\/ */g), '')\n                            .replace((/,/g), ', ')\n                            .replace((/\\s+/g), ' ');\n                        return element.signature;\n                    })\n                    .replace(\n                        (/( *?\\/\\*[\\S\\s]*?\\*\\/\\n)/),\n                        '<span class=\"apidocCodeCommentSpan\">$1</span>'\n                    )\n                    .replace((/^function \\(/), key + ' = function (');\n                // init example\n                options.exampleList.some(function (example) {\n                    example.replace(\n                        new RegExp('((?:\\n.*?){8}\\\\.)(' + key + ')(\\\\((?:.*?\\n){8})'),\n                        function (match0, match1, match2, match3) {\n                            // jslint-hack\n                            local.nop(match0);\n                            element.example = '...' + trimLeft(local.stringHtmlSafe(match1) +\n                                '<span class=\"apidocCodeKeywordSpan\">' +\n                                local.stringHtmlSafe(match2) +\n                                '</span>' +\n                                local.stringHtmlSafe(match3)).trimRight() + '\\n...';\n                        }\n                    );\n                    return element.example;\n                });\n                element.example = element.example || 'n/a';\n                return element;\n            };\n            readExample = function (file) {\n            /*\n             * this function will read the example from the given file\n             */\n                var result;\n                local.tryCatchOnError(function () {\n                    file = local.path.resolve(options.dir, file);\n                    console.error('apidocCreate - readExample ' + file);\n                    result = '';\n                    result = ('\\n\\n\\n\\n\\n\\n\\n\\n' +\n                        // bug-workaround - truncate example to manageable size\n                        local.fs.readFileSync(file, 'utf8').slice(0, 262144) +\n                        '\\n\\n\\n\\n\\n\\n\\n\\n').replace((/\\r\\n*/g), '\\n');\n                }, console.error);\n                return result;\n            };\n            toString = function (value) {\n            /*\n             * this function will try to return the string form of the value\n             */\n                var result;\n                local.tryCatchOnError(function () {\n                    result = '';\n                    result = String(value);\n                }, console.error);\n                return result;\n            };\n            trimLeft = function (text) {\n            /*\n             * this function will normalize the whitespace around the text\n             */\n                var whitespace;\n                whitespace = '';\n                text.trim().replace((/^ */gm), function (match0) {\n                    if (!whitespace || match0.length < whitespace.length) {\n                        whitespace = match0;\n                    }\n                });\n                text = text.replace(new RegExp('^' + whitespace, 'gm'), '');\n                // enforce 128 character column limit\n                text = text.replace((/^.{128}[^\\\\\\n]+/gm), function (match0) {\n                    return match0.replace((/(.{128}(?:\\b|\\w+))/g), '$1\\n').trimRight();\n                });\n                return text;\n            };\n            // init options\n            options.dir = local.moduleDirname(\n                options.dir,\n                options.modulePathList || local.module.paths\n            );\n            local.objectSetDefault(options, {\n                env: { npm_package_description: '' },\n                packageJson: JSON.parse(readExample('package.json')),\n                require: function (file) {\n                    return local.tryCatchOnError(function () {\n                        return require(file);\n                    }, console.error);\n                }\n            });\n            Object.keys(options.packageJson).forEach(function (key) {\n                tmp = options.packageJson[key];\n                // strip email from npmdoc documentation\n                // https://github.com/npmdoc/node-npmdoc-hpp/issues/1\n                if (tmp) {\n                    if (tmp.email) {\n                        delete tmp.email;\n                    }\n                    if (Array.isArray(tmp)) {\n                        tmp.forEach(function (element) {\n                            if (element && element.email) {\n                                delete element.email;\n                            }\n                        });\n                    }\n                }\n                if (key[0] === '_' || key === 'readme') {\n                    delete options.packageJson[key];\n                } else if (typeof tmp === 'string') {\n                    options.env['npm_package_' + key] = tmp;\n                }\n            });\n            local.objectSetDefault(options, {\n                blacklistDict: { global: global },\n                circularList: [global],\n                exampleDict: {},\n                exampleList: [],\n                html: '',\n                libFileList: [],\n                moduleDict: {},\n                moduleExtraDict: {},\n                packageJson: { bin: {} },\n                template: local.templateApidocHtml,\n                whitelistDict: {}\n            }, 2);\n            // init exampleList\n            [1, 2, 3, 4].forEach(function (depth) {\n                options.exampleList = options.exampleList.concat(\n                    // find . -maxdepth 1 -mindepth 1 -name \"*.js\" -type f\n                    // http://stackoverflow.com/questions/4509624/how-to-limit-depth-for-recursive-file-list\n                    local.child_process.execSync('find \"' + options.dir +\n                        '\" -maxdepth ' + depth + ' -mindepth ' + depth +\n                        ' -type f | sed -e \"s|' + options.dir +\n                        '/||\" | grep -iv ' +\n/* jslint-ignore-begin */\n'\"\\\n/\\\\.\\\\|\\\\(\\\\b\\\\|_\\\\)\\\\(\\\nbower_component\\\\|\\\ncoverage\\\\|\\\ngit\\\\|\\\nmin\\\\|\\\nnode_module\\\\|\\\nrollup\\\\|\\\ntmp\\\\|\\\nvendor\\\\)s\\\\{0,1\\\\}\\\\(\\\\b\\\\|_\\\\)\\\n\" ' +\n/* jslint-ignore-end */\n                            ' | sort | head -n 256').toString()\n                        .split('\\n')\n                );\n            });\n            options.exampleList = options.exampleList.filter(function (file) {\n                if (file && !options.exampleDict[file]) {\n                    options.exampleDict[file] = true;\n                    return true;\n                }\n            }).slice(0, 256).map(readExample);\n            // init moduleMain\n            local.tryCatchOnError(function () {\n                console.error('apidocCreate - requiring ' + options.dir + ' ...');\n                moduleMain = {};\n                moduleMain = options.moduleDict[options.env.npm_package_name] ||\n                    options.require(options.dir) ||\n                    options.require(options.dir + '/' +\n                        (options.packageJson.bin)[Object.keys(options.packageJson.bin)[0]]) || {};\n                options.circularList.push(moduleMain);\n                console.error('apidocCreate - ... required ' + options.dir);\n            }, console.error);\n            tmp = {};\n            // handle case where module is a function\n            if (typeof moduleMain === 'function') {\n                (function () {\n                    var text;\n                    text = toString(moduleMain);\n                    tmp = function () {\n                        return;\n                    };\n                    // coverage-hack\n                    tmp();\n                    Object.defineProperties(tmp, { toString: { get: function () {\n                        return function () {\n                            return text;\n                        };\n                    } } });\n                }());\n            }\n            // normalize moduleMain\n            moduleMain = options.moduleDict[options.env.npm_package_name] = local.objectSetDefault(\n                tmp,\n                moduleMain\n            );\n            // init circularList - builtin\n            Object.keys(process.binding('natives')).forEach(function (key) {\n                local.tryCatchOnError(function () {\n                    options.circularList.push(require(key));\n                }, local.nop);\n            });\n            // init circularList - blacklistDict\n            Object.keys(options.blacklistDict).forEach(function (key) {\n                options.circularList.push(options.blacklistDict[key]);\n            });\n            // init circularList - moduleDict\n            Object.keys(options.moduleDict).forEach(function (key) {\n                options.circularList.push(options.moduleDict[key]);\n            });\n            // init circularList - prototype\n            Object.keys(options.circularList).forEach(function (key) {\n                tmp = options.circularList[key];\n                options.circularList.push(tmp && tmp.prototype);\n            });\n            // deduplicate circularList\n            tmp = options.circularList;\n            options.circularList = [];\n            tmp.forEach(function (element) {\n                if (options.circularList.indexOf(element) < 0) {\n                    options.circularList.push(element);\n                }\n            });\n            // init moduleDict child\n            local.apidocModuleDictAdd(options, options.moduleDict);\n            // init swgg.apiDict\n            Object.keys((moduleMain.swgg && moduleMain.swgg.apiDict) || {}).forEach(function (key) {\n                tmp = 'swgg.apiDict';\n                tmp = options.moduleDict[tmp] = options.moduleDict[tmp] || {};\n                tmp[key + '.ajax'] = moduleMain.swgg.apiDict[key] &&\n                    moduleMain.swgg.apiDict[key].ajax;\n            });\n            // init moduleExtraDict\n            module = options.moduleExtraDict[options.env.npm_package_name] =\n                options.moduleExtraDict[options.env.npm_package_name] || {};\n            [1, 2, 3, 4].forEach(function (depth) {\n                options.libFileList = options.libFileList.concat(\n                    // find . -maxdepth 1 -mindepth 1 -name \"*.js\" -type f\n                    // http://stackoverflow.com/questions/4509624/how-to-limit-depth-for-recursive-file-list\n                    local.child_process.execSync('find \"' + options.dir +\n                        '\" -maxdepth ' + depth + ' -mindepth ' + depth +\n                        ' -name \"*.js\" -type f | sed -e \"s|' + options.dir +\n                        '/||\" | grep -iv ' +\n/* jslint-ignore-begin */\n'\"\\\n/\\\\.\\\\|\\\\(\\\\b\\\\|_\\\\)\\\\(\\\narchive\\\\|artifact\\\\|asset\\\\|\\\nbower_component\\\\|build\\\\|\\\ncoverage\\\\|\\\ndoc\\\\|dist\\\\|\\\nexample\\\\|external\\\\|\\\nfixture\\\\|\\\ngit\\\\|\\\nlog\\\\|\\\nmin\\\\|mock\\\\|\\\nnode_module\\\\|\\\nrollup\\\\|\\\nspec\\\\|\\\ntest\\\\|tmp\\\\|\\\nvendor\\\\)s\\\\{0,1\\\\}\\\\(\\\\b\\\\|_\\\\)\\\n\" ' +\n/* jslint-ignore-end */\n                            ' | sort | head -n 256').toString()\n                        .split('\\n')\n                );\n            });\n            options.ii = 256;\n            options.libFileList.every(function (file) {\n                local.tryCatchOnError(function () {\n                    tmp = {};\n                    tmp.name = local.path.basename(file)\n                        .replace('lib.', '')\n                        .replace((/\\.[^.]*?$/), '')\n                        .replace((/\\W/g), '_');\n                    [\n                        tmp.name,\n                        tmp.name.slice(0, 1).toUpperCase() + tmp.name.slice(1)\n                    ].some(function (name) {\n                        tmp.isFiltered = name && (!options.packageJson.main ||\n                                ('./' + file).indexOf(options.packageJson.main) < 0) &&\n                            !module[name];\n                        return !tmp.isFiltered;\n                    });\n                    if (!tmp.isFiltered) {\n                        return;\n                    }\n                    console.error('apidocCreate - libFile ' + file);\n                    tmp.module = options.require(options.dir + '/' + file);\n                    // filter circular-reference\n                    if (!(tmp.module && options.circularList.indexOf(tmp.module) < 0)) {\n                        return;\n                    }\n                    options.ii -= 1;\n                    module[tmp.name] = tmp.module;\n                }, console.error);\n                return options.ii;\n            });\n            local.apidocModuleDictAdd(options, options.moduleExtraDict);\n            Object.keys(options.moduleDict).forEach(function (key) {\n                if (key.indexOf(options.env.npm_package_name + '.') !== 0) {\n                    return;\n                }\n                tmp = key.split('.').slice(1).join('.');\n                moduleMain[tmp] = moduleMain[tmp] || options.moduleDict[key];\n            });\n            // init moduleList\n            options.moduleList = Object.keys(options.moduleDict)\n                .sort()\n                .map(function (prefix) {\n                    module = options.moduleDict[prefix];\n                    // handle case where module is a function\n                    if (typeof module === 'function') {\n                        local.tryCatchOnError(function () {\n                            module[prefix.split('.').slice(-1)[0]] =\n                                module[prefix.split('.').slice(-1)[0]] || module;\n                        }, console.error);\n                    }\n                    return {\n                        elementList: Object.keys(module)\n                            .filter(function (key) {\n                                return local.tryCatchOnError(function () {\n                                    return key &&\n                                        (/^\\w[\\w\\-.]*?$/).test(key) &&\n                                        key.indexOf('testCase_') !== 0 &&\n                                        (module[key] !== options.blacklistDict[key]\n                                            || options.whitelistDict[key]);\n                                }, console.error);\n                            })\n                            .map(function (key) {\n                                return elementCreate(module, prefix, key);\n                            })\n                            .sort(function (aa, bb) {\n                                return aa.name > bb.name\n                                    ? 1\n                                    : -1;\n                            }),\n                        id: encodeURIComponent('apidoc.module.' + prefix),\n                        name: prefix\n                    };\n                });\n            // render apidoc\n            options.result = local.templateRender(options.template, options, { notHtmlSafe: true })\n                .trim()\n                .replace((/ +$/gm), '') + '\\n';\n            return options.result;\n        };\n\n        local.apidocModuleDictAdd = function (options, moduleDict) {\n        /*\n         * this function will add the modules in moduleDict to options.moduleDict\n         */\n            var isModule, objectKeys, tmp;\n            objectKeys = function (dict) {\n            /*\n             * this function will return a list of the dict's keys, with valid getters\n             */\n                return Object.keys(dict).sort().filter(function (key) {\n                    return local.tryCatchOnError(function () {\n                        return dict[key] || true;\n                    }, local.nop);\n                });\n            };\n            ['child', 'prototype', 'grandchild', 'prototype'].forEach(function (element) {\n                objectKeys(moduleDict).forEach(function (prefix) {\n                    if (!(/^\\w[\\w\\-.]*?$/).test(prefix)) {\n                        return;\n                    }\n                    objectKeys(moduleDict[prefix]).forEach(function (key) {\n                        if (!(/^\\w[\\w\\-.]*?$/).test(key) || !moduleDict[prefix][key]) {\n                            return;\n                        }\n                        tmp = element === 'prototype'\n                            ? {\n                                module: moduleDict[prefix][key].prototype,\n                                name: prefix + '.' + key + '.prototype'\n                            }\n                            : {\n                                module: moduleDict[prefix][key],\n                                name: prefix + '.' + key\n                            };\n                        if (!tmp.module ||\n                                !(typeof tmp.module === 'function' ||\n                                typeof tmp.module === 'object') ||\n                                Array.isArray(tmp.module) ||\n                                options.moduleDict[tmp.name] ||\n                                options.circularList.indexOf(tmp.module) >= 0) {\n                            return;\n                        }\n                        isModule = [\n                            tmp.module,\n                            tmp.module.prototype\n                        ].some(function (dict) {\n                            return objectKeys(dict || {}).some(function (key) {\n                                return typeof dict[key] === 'function';\n                            });\n                        });\n                        if (!isModule) {\n                            return;\n                        }\n                        options.circularList.push(tmp.module);\n                        options.moduleDict[tmp.name] = tmp.module;\n                    });\n                });\n            });\n        };\n    }());\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    (function () {\n        if (local.isBrowser) {\n            return;\n        }\n        // init cli\n        if (module !== require.main || local.global.utility2_rollup) {\n            return;\n        }\n        local.cliDict = {};\n        local.cliDict._default = function () {\n        /*\n         * <moduleDirectory>\n         * # create apidoc from <moduleDirectory>\n         */\n            // jslint files\n            process.stdout.write(local.apidocCreate({\n                dir: process.argv[2],\n                modulePathList: module.paths\n            }));\n        };\n        local.cliRun();\n    }());\n}());\n","/home/travis/build/kaizhu256/node-apidoc-lite/example.js":"/*\nexample.js\n\nthis script will run a web-demo of apidoc-lite\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install apidoc-lite && PORT=8081 node example.js\n    3. open a browser to http://127.0.0.1:8081 and play with the web-demo\n    4. edit this script to suit your needs\n*/\n\n\n\n/* istanbul instrument in package apidoc */\n/* jslint-utility2 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 4,\n    maxlen: 100,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init isBrowser\n        local.isBrowser = typeof window === \"object\" &&\n            typeof window.XMLHttpRequest === \"function\" &&\n            window.document &&\n            typeof window.document.querySelectorAll === \"function\";\n        // init global\n        local.global = local.isBrowser\n            ? window\n            : global;\n        // re-init local\n        local = local.global.utility2_rollup || (local.isBrowser\n            ? local.global.utility2_apidoc\n            : global.utility2_moduleExports);\n        // init exports\n        local.global.local = local;\n    }());\n\n\n\n    // run browser js-env code - init-test\n    /* istanbul ignore next */\n    (function () {\n        if (!local.isBrowser) {\n            return;\n        }\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.maxHeight === '0px') {\n                    local.uiAnimateSlideDown(document.querySelector('#testReportDiv1'));\n                    document.querySelector('#testRunButton1').textContent = 'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    local.uiAnimateSlideUp(document.querySelector('#testReportDiv1'));\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputStdoutTextarea1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputStdoutTextarea1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputStdoutTextarea1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n    }());\n\n\n\n    // run node js-env code - init-test\n    /* istanbul ignore next */\n    (function () {\n        if (local.isBrowser) {\n            return;\n        }\n        // init exports\n        module.exports = local;\n        // require builtins\n        // local.assert = require('assert');\n        local.buffer = require('buffer');\n        local.child_process = require('child_process');\n        local.cluster = require('cluster');\n        local.console = require('console');\n        local.constants = require('constants');\n        local.crypto = require('crypto');\n        local.dgram = require('dgram');\n        local.dns = require('dns');\n        local.domain = require('domain');\n        local.events = require('events');\n        local.fs = require('fs');\n        local.http = require('http');\n        local.https = require('https');\n        local.module = require('module');\n        local.net = require('net');\n        local.os = require('os');\n        local.path = require('path');\n        local.process = require('process');\n        local.punycode = require('punycode');\n        local.querystring = require('querystring');\n        local.readline = require('readline');\n        local.repl = require('repl');\n        local.stream = require('stream');\n        local.string_decoder = require('string_decoder');\n        local.timers = require('timers');\n        local.tls = require('tls');\n        local.tty = require('tty');\n        local.url = require('url');\n        local.util = require('util');\n        local.v8 = require('v8');\n        local.vm = require('vm');\n        local.zlib = require('zlib');\n        /* validateLineSortedReset */\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        [\n            'assets.index.template.html',\n            'assets.swgg.swagger.json',\n            'assets.swgg.swagger.server.json'\n        ].forEach(function (file) {\n            file = '/' + file;\n            local.assetsDict[file] = local.assetsDict[file] || '';\n            if (local.fs.existsSync(local.__dirname + file)) {\n                local.assetsDict[file] = local.fs.readFileSync(\n                    local.__dirname + file,\n                    'utf8'\n                );\n            }\n        });\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<!-- \"assets.utility2.template.html\" -->\\n\\\n<title>{{env.npm_package_name}} ({{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/* jslint-utility2 */\\n\\\n/*csslint\\n\\\n*/\\n\\\n/* jslint-ignore-begin */\\n\\\n*,\\n\\\n*:after,\\n\\\n*:before {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\n/* jslint-ignore-end */\\n\\\n@keyframes uiAnimateShake {\\n\\\n    0%, 50% {\\n\\\n        transform: translateX(10px);\\n\\\n    }\\n\\\n    25%, 75% {\\n\\\n        transform: translateX(-10px);\\n\\\n    }\\n\\\n    100% {\\n\\\n        transform: translateX(0);\\n\\\n    }\\n\\\n}\\n\\\n@keyframes uiAnimateSpin {\\n\\\n    0% {\\n\\\n        transform: rotate(0deg);\\n\\\n    }\\n\\\n    100% {\\n\\\n        transform: rotate(360deg);\\n\\\n    }\\n\\\n}\\n\\\na {\\n\\\n    overflow-wrap: break-word;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #eef;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 0 40px;\\n\\\n}\\n\\\nbody > div,\\n\\\nbody > form > div,\\n\\\nbody > form > input,\\n\\\nbody > form > pre,\\n\\\nbody > form > textarea,\\n\\\nbody > form > .button,\\n\\\nbody > input,\\n\\\nbody > pre,\\n\\\nbody > textarea,\\n\\\nbody > .button {\\n\\\n    margin-bottom: 20px;\\n\\\n}\\n\\\nbody > form > input,\\n\\\nbody > form > .button,\\n\\\nbody > input,\\n\\\nbody > .button {\\n\\\n    width: 20rem;\\n\\\n}\\n\\\nbody > form > textarea,\\n\\\nbody > textarea {\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\nbody > textarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\ncode,\\n\\\npre,\\n\\\ntextarea {\\n\\\n    font-family: Consolas, Menlo, monospace;\\n\\\n    font-size: small;\\n\\\n}\\n\\\npre {\\n\\\n    overflow-wrap: break-word;\\n\\\n    white-space: pre-wrap;\\n\\\n}\\n\\\ntextarea {\\n\\\n    overflow: auto;\\n\\\n    white-space: pre;\\n\\\n}\\n\\\n.button {\\n\\\n    background-color: #fff;\\n\\\n    border: 1px solid;\\n\\\n    border-bottom-color: rgb(186, 186, 186);\\n\\\n    border-left-color: rgb(209, 209, 209);\\n\\\n    border-radius: 4px;\\n\\\n    border-right-color: rgb(209, 209, 209);\\n\\\n    border-top-color: rgb(216, 216, 216);\\n\\\n    color: #00d;\\n\\\n    cursor: pointer;\\n\\\n    display: inline-block;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    font-size: 12px;\\n\\\n    font-style: normal;\\n\\\n    font-weight: normal;\\n\\\n    margin: 0;\\n\\\n    padding: 2px 7px 3px 7px;\\n\\\n    text-align: center;\\n\\\n    text-decoration: underline;\\n\\\n}\\n\\\n.colorError {\\n\\\n    color: #d00;\\n\\\n}\\n\\\n.uiAnimateShake {\\n\\\n    animation-duration: 500ms;\\n\\\n    animation-name: uiAnimateShake;\\n\\\n}\\n\\\n.uiAnimateSlide {\\n\\\n    overflow-y: hidden;\\n\\\n    transition: max-height ease-in 250ms, min-height ease-in 250ms, padding-bottom ease-in 250ms, padding-top ease-in 250ms;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    text-align: center;\\n\\\n}\\n\\\n.zeroPixel {\\n\\\n    border: 0;\\n\\\n    height: 0;\\n\\\n    margin: 0;\\n\\\n    padding: 0;\\n\\\n    width: 0;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<script>\\n\\\n/* jslint-utility2 */\\n\\\n/*jslint\\n\\\n    bitwise: true,\\n\\\n    browser: true,\\n\\\n    maxerr: 4,\\n\\\n    maxlen: 100,\\n\\\n    node: true,\\n\\\n    nomen: true,\\n\\\n    regexp: true,\\n\\\n    stupid: true\\n\\\n*/\\n\\\n// init domOnEventWindowOnloadTimeElapsed\\n\\\n(function () {\\n\\\n/*\\n\\\n * this function will measure and print the time-elapsed for window.onload\\n\\\n */\\n\\\n    \"use strict\";\\n\\\n    if (window.domOnEventWindowOnloadTimeElapsed) {\\n\\\n        return;\\n\\\n    }\\n\\\n    window.domOnEventWindowOnloadTimeElapsed = Date.now() + 100;\\n\\\n    window.addEventListener(\"load\", function () {\\n\\\n        setTimeout(function () {\\n\\\n            window.domOnEventWindowOnloadTimeElapsed = Date.now() -\\n\\\n                window.domOnEventWindowOnloadTimeElapsed;\\n\\\n            console.error(\"domOnEventWindowOnloadTimeElapsed = \" +\\n\\\n                window.domOnEventWindowOnloadTimeElapsed);\\n\\\n        }, 100);\\n\\\n    });\\n\\\n}());\\n\\\n</script>\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 500ms, width 1500ms; width: 0%; z-index: 1;\"></div>\\n\\\n<div class=\"uiAnimateSpin\" style=\"animation: uiAnimateSpin 2s linear infinite; border: 5px solid #999; border-radius: 50%; border-top: 5px solid #7d7; display: none; height: 25px; vertical-align: middle; width: 25px;\"></div>\\n\\\n<script>\\n\\\n/* jslint-utility2 */\\n\\\n/*jslint\\n\\\n    bitwise: true,\\n\\\n    browser: true,\\n\\\n    maxerr: 4,\\n\\\n    maxlen: 100,\\n\\\n    node: true,\\n\\\n    nomen: true,\\n\\\n    regexp: true,\\n\\\n    stupid: true\\n\\\n*/\\n\\\n// init timerIntervalAjaxProgressUpdate\\n\\\n(function () {\\n\\\n/*\\n\\\n * this function will increment the ajax-progress-bar until the webpage has loaded\\n\\\n */\\n\\\n    \"use strict\";\\n\\\n    var ajaxProgressDiv1,\\n\\\n        ajaxProgressState,\\n\\\n        ajaxProgressUpdate;\\n\\\n    if (window.timerIntervalAjaxProgressUpdate || !document.querySelector(\"#ajaxProgressDiv1\")) {\\n\\\n        return;\\n\\\n    }\\n\\\n    ajaxProgressDiv1 = document.querySelector(\"#ajaxProgressDiv1\");\\n\\\n    setTimeout(function () {\\n\\\n        ajaxProgressDiv1.style.width = \"25%\";\\n\\\n    });\\n\\\n    ajaxProgressState = 0;\\n\\\n    ajaxProgressUpdate = (window.local &&\\n\\\n        window.local.ajaxProgressUpdate) || function () {\\n\\\n        ajaxProgressDiv1.style.width = \"100%\";\\n\\\n        setTimeout(function () {\\n\\\n            ajaxProgressDiv1.style.background = \"transparent\";\\n\\\n            setTimeout(function () {\\n\\\n                ajaxProgressDiv1.style.width = \"0%\";\\n\\\n            }, 500);\\n\\\n        }, 1500);\\n\\\n    };\\n\\\n    window.timerIntervalAjaxProgressUpdate = setInterval(function () {\\n\\\n        ajaxProgressState += 1;\\n\\\n        ajaxProgressDiv1.style.width = Math.max(\\n\\\n            100 - 75 * Math.exp(-0.125 * ajaxProgressState),\\n\\\n            ajaxProgressDiv1.style.width.slice(0, -1) | 0\\n\\\n        ) + \"%\";\\n\\\n    }, 1000);\\n\\\n    window.addEventListener(\"load\", function () {\\n\\\n        clearInterval(window.timerIntervalAjaxProgressUpdate);\\n\\\n        ajaxProgressUpdate();\\n\\\n    });\\n\\\n}());\\n\\\n// init domOnEventMediaHotkeys\\n\\\n(function () {\\n\\\n/*\\n\\\n * this function will add media-hotkeys to elements with class=\".domOnEventMediaHotkeysInit\"\\n\\\n */\\n\\\n    \"use strict\";\\n\\\n    var input, onEvent;\\n\\\n    if (window.domOnEventMediaHotkeys) {\\n\\\n        return;\\n\\\n    }\\n\\\n    onEvent = window.domOnEventMediaHotkeys = function (event) {\\n\\\n        var media;\\n\\\n        if (event === \"init\") {\\n\\\n            Array.from(\\n\\\n                document.querySelectorAll(\".domOnEventMediaHotkeysInit\")\\n\\\n            ).forEach(function (media) {\\n\\\n                media.classList.remove(\"domOnEventMediaHotkeysInit\");\\n\\\n                media.classList.add(\"domOnEventMediaHotkeys\");\\n\\\n                [\"play\", \"pause\", \"seeking\"].forEach(function (event) {\\n\\\n                    media.addEventListener(event, onEvent);\\n\\\n                });\\n\\\n            });\\n\\\n            return;\\n\\\n        }\\n\\\n        if (event.currentTarget.classList.contains(\"domOnEventMediaHotkeys\")) {\\n\\\n            window.domOnEventMediaHotkeysMedia1 = event.currentTarget;\\n\\\n            window.domOnEventMediaHotkeysInput.focus();\\n\\\n            return;\\n\\\n        }\\n\\\n        media = window.domOnEventMediaHotkeysMedia1;\\n\\\n        try {\\n\\\n            switch (event.key || event.type) {\\n\\\n            case \",\":\\n\\\n            case \".\":\\n\\\n                media.currentTime += (event.key === \",\" && -0.03125) || 0.03125;\\n\\\n                break;\\n\\\n            case \"<\":\\n\\\n            case \">\":\\n\\\n                media.playbackRate *= (event.key === \"<\" && 0.5) || 2;\\n\\\n                break;\\n\\\n            case \"ArrowDown\":\\n\\\n            case \"ArrowUp\":\\n\\\n                media.volume += (event.key === \"ArrowDown\" && -0.05) || 0.05;\\n\\\n                break;\\n\\\n            case \"ArrowLeft\":\\n\\\n            case \"ArrowRight\":\\n\\\n                media.currentTime += (event.key === \"ArrowLeft\" && -5) || 5;\\n\\\n                break;\\n\\\n            case \"j\":\\n\\\n            case \"l\":\\n\\\n                media.currentTime += (event.key === \"j\" && -10) || 10;\\n\\\n                break;\\n\\\n            case \"k\":\\n\\\n            case \" \":\\n\\\n                if (media.paused) {\\n\\\n                    media.play();\\n\\\n                } else {\\n\\\n                    media.pause();\\n\\\n                }\\n\\\n                break;\\n\\\n            case \"m\":\\n\\\n                media.muted = !media.muted;\\n\\\n                break;\\n\\\n            default:\\n\\\n                if (event.key >= 0) {\\n\\\n                    media.currentTime = 0.1 * event.key * media.duration;\\n\\\n                    break;\\n\\\n                }\\n\\\n                return;\\n\\\n            }\\n\\\n        } catch (ignore) {\\n\\\n        }\\n\\\n        event.preventDefault();\\n\\\n    };\\n\\\n    input = window.domOnEventMediaHotkeysInput = document.createElement(\"button\");\\n\\\n    input.style = \"border:0;height:0;margin:0;padding:0;position:fixed;width:0;z-index:-1;\";\\n\\\n    input.addEventListener(\"click\", onEvent);\\n\\\n    input.addEventListener(\"keydown\", onEvent);\\n\\\n    document.body.appendChild(input);\\n\\\n    onEvent(\"init\");\\n\\\n}());\\n\\\n// init domOnEventSelectAllWithinPre\\n\\\n(function () {\\n\\\n/*\\n\\\n * this function will limit select-all within <pre tabIndex=\"0\"> elements\\n\\\n * https://stackoverflow.com/questions/985272/selecting-text-in-an-element-akin-to-highlighting-with-your-mouse\\n\\\n */\\n\\\n    \"use strict\";\\n\\\n    if (window.domOnEventSelectAllWithinPre) {\\n\\\n        return;\\n\\\n    }\\n\\\n    window.domOnEventSelectAllWithinPre = function (event) {\\n\\\n        var range, selection;\\n\\\n        if (event &&\\n\\\n                event.key === \"a\" &&\\n\\\n                (event.ctrlKey || event.metaKey) &&\\n\\\n                event.target.closest(\"pre\")) {\\n\\\n            range = document.createRange();\\n\\\n            range.selectNodeContents(event.target.closest(\"pre\"));\\n\\\n            selection = window.getSelection();\\n\\\n            selection.removeAllRanges();\\n\\\n            selection.addRange(range);\\n\\\n            event.preventDefault();\\n\\\n        }\\n\\\n    };\\n\\\n    document.addEventListener(\"keydown\", window.domOnEventSelectAllWithinPre);\\n\\\n}());\\n\\\n</script>\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} ({{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<a class=\"button\" download href=\"assets.app.js\">download standalone app</a><br>\\n\\\n<button class=\"button onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div class=\"uiAnimateSlide\" id=\"testReportDiv1\" style=\"border-bottom: 0; border-top: 0; margin-bottom: 0; margin-top: 0; max-height: 0; padding-bottom: 0; padding-top: 0;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputStdoutTextarea1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script>window.utility2.onResetBefore.counter += 1;</script>\\n\\\n<script src=\"jsonp.utility2.stateInit?callback=window.utility2.stateInit\"></script>\\n\\\n<script src=\"assets.apidoc.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<script>window.utility2.onResetBefore();</script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        /* validateLineSortedReset */\n        /* jslint-ignore-begin */\n        // bug-workaround - long $npm_package_buildCustomOrg\n        local.assetsDict['/assets.apidoc.js'] =\n            local.assetsDict['/assets.apidoc.js'] ||\n            local.fs.readFileSync(local.__dirname + '/lib.apidoc.js', 'utf8'\n        ).replace((/^#!\\//), '// ');\n        /* jslint-ignore-end */\n        /* validateLineSortedReset */\n        local.assetsDict['/'] =\n            local.assetsDict['/assets.example.html'] =\n            local.assetsDict['/assets.index.template.html']\n            .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                switch (match1) {\n                case 'npm_package_description':\n                    return 'the greatest app in the world!';\n                case 'npm_package_name':\n                    return 'apidoc-lite';\n                case 'npm_package_nameLib':\n                    return 'apidoc';\n                case 'npm_package_version':\n                    return '0.0.1';\n                default:\n                    return match0;\n                }\n            });\n        // init cli\n        if (module !== require.main || local.global.utility2_rollup) {\n            return;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            return;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n    }());\n}());\n"}